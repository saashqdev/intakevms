{"openapi":"3.1.0","info":{"title":"FastAPI","version":"0.1.0"},"paths":{"/interfaces/":{"get":{"tags":["interface"],"summary":"Get Interfaces","description":"API endpoint for retrieving a list of all interfaces.\n\nArgs:\n    is_need_filter (Optional[bool], optional): Flag indicating whether to\n        apply filtering on interfaces. Defaults to False.\n    crud (InterfaceCrud, optional): Dependency injection for CRUD operations\n        on interfaces.\n\nReturns:\n    Page[schemas.Interface]: A paginated list of interfaces retrieved from\n        the database.\n\nRaises:\n    Exception: Any error that occurs during the process.","operationId":"get_interfaces_interfaces__get","security":[{"OAuth2PasswordBearer":[]}],"parameters":[{"name":"is_need_filter","in":"query","required":false,"schema":{"type":"boolean","description":"Flag for filtering interfaces.","default":false,"title":"Is Need Filter"},"description":"Flag for filtering interfaces."},{"name":"page","in":"query","required":false,"schema":{"type":"integer","minimum":1,"description":"Page number","default":1,"title":"Page"},"description":"Page number"},{"name":"size","in":"query","required":false,"schema":{"type":"integer","maximum":100,"minimum":1,"description":"Page size","default":50,"title":"Size"},"description":"Page size"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Page_Interface_"}}}},"404":{"description":"Not found!"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/interfaces/bridges/":{"get":{"tags":["interface"],"summary":"Get Bridges List","description":"API endpoint for retrieving the list of network bridges.\n\nArgs:\n    crud (InterfaceCrud, optional): Dependency injection for CRUD operations\n        on interfaces.\n\nReturns:\n    List[str]: A list of network bridges.\n\nRaises:\n    Exception: Any error that occurs during the process.","operationId":"get_bridges_list_interfaces_bridges__get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"items":{"type":"object"},"type":"array","title":"Response Get Bridges List Interfaces Bridges  Get"}}}},"404":{"description":"Not found!"}},"security":[{"OAuth2PasswordBearer":[]}]}},"/interfaces/{iface_id}/":{"get":{"tags":["interface"],"summary":"Get Interface","description":"API endpoint for retrieving current network interface data.\n\nArgs:\n    iface_id (str): Interface ID (UUID4).\n    crud (InterfaceCrud, optional): Dependency injection for CRUD operations\n        on interfaces.\n\nReturns:\n    schemas.Interface: Response containing information about the specified\n        network interface.\n\nRaises:\n    Exception: Any error that occurs during the process.","operationId":"get_interface_interfaces__iface_id___get","security":[{"OAuth2PasswordBearer":[]}],"parameters":[{"name":"iface_id","in":"path","required":true,"schema":{"type":"string","format":"uuid","title":"Iface Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Interface-Output"}}}},"404":{"description":"Not found!"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/interfaces/create/":{"post":{"tags":["interface"],"summary":"Bridge Create","description":"API endpoint for creating a network bridge.\n\nArgs:\n    data (schemas.BridgeCreate): Information about the bridge to be created.\n    user_info (Dict): User information retrieved from the authentication\n        token.\n    crud (InterfaceCrud, optional): Dependency injection for CRUD operations\n        on interfaces.\n\nReturns:\n    schemas.BridgeCreateResponse: Response containing information about the\n        created bridge.\n\nRaises:\n    Exception: Any error that occurs during the process.","operationId":"bridge_create_interfaces_create__post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/BridgeCreate"}}},"required":true},"responses":{"201":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BridgeCreateResponse"}}}},"404":{"description":"Not found!"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":[]}]}},"/interfaces/delete/":{"delete":{"tags":["interface"],"summary":"Bridge Delete","description":"API endpoint for deleting a bridge.\n\nArgs:\n    data (List[str]): IDs of bridges to delete.\n    user_info (Dict): User information retrieved from the authentication\n        token.\n    crud (InterfaceCrud, optional): Dependency injection for CRUD operations\n        on interfaces.\n\nReturns:\n    List[Dict]: A list of responses containing information about the deleted\n        bridges.\n\nRaises:\n    Exception: Any error that occurs during the process.","operationId":"bridge_delete_interfaces_delete__delete","requestBody":{"content":{"application/json":{"schema":{"items":{"type":"string"},"type":"array","title":"Data"}}},"required":true},"responses":{"202":{"description":"Successful Response","content":{"application/json":{"schema":{"items":{"type":"object"},"type":"array","title":"Response Bridge Delete Interfaces Delete  Delete"}}}},"404":{"description":"Not found!"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":[]}]}},"/interfaces/{name}/turn_on":{"put":{"tags":["interface"],"summary":"Turn On Interface","description":"Turn on the specified interface.\n\nThis function sends a turn-on command for the specified network interface\nvia the provided CRUD operations. The actual operation is run in a thread\npool to avoid blocking the event loop.\n\nArgs:\n    name (str): The name of the network interface to be turned on.\n    crud (InterfaceCrud, optional): The CRUD operations dependency for\n        managing interfaces.\n\nReturns:\n    JSONResponse: A JSON response with a success message and HTTP 200\n        status.","operationId":"turn_on_interface_interfaces__name__turn_on_put","security":[{"OAuth2PasswordBearer":[]}],"parameters":[{"name":"name","in":"path","required":true,"schema":{"type":"string","title":"Name"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found!"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/interfaces/{name}/turn_off":{"put":{"tags":["interface"],"summary":"Turn Off Interface","description":"Turn off the specified interface.\n\nThis function sends a turn-off command for the specified network interface\nvia the provided CRUD operations. The actual operation is run in a thread\npool to avoid blocking the event loop.\n\nArgs:\n    name (str): The name of the network interface to be turned off.\n    crud (InterfaceCrud, optional): The CRUD operations dependency for\n        managing interfaces.\n\nReturns:\n    JSONResponse: A JSON response with a success message and HTTP 200\n        status.","operationId":"turn_off_interface_interfaces__name__turn_off_put","security":[{"OAuth2PasswordBearer":[]}],"parameters":[{"name":"name","in":"path","required":true,"schema":{"type":"string","title":"Name"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found!"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/dashboard/":{"get":{"tags":["dashboard"],"summary":"Get Node Data","description":"Retrieve node resource data.\n\nThis function takes a `DashboardCrud` object as a dependency and returns a\n`NodeInfo` object containing the node resource data. The `DashboardCrud`\nobject is responsible for fetching the data from the `PrometheusRepository`\nclass.\n\nArgs:\n    crud (DashboardCrud): The `DashboardCrud` object used to fetch the node\n        resource data.\n\nReturns:\n    NodeInfo: A pydantic model containing the node resource data.","operationId":"get_node_data_dashboard__get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NodeInfo"}}}},"404":{"description":"Not found!"}},"security":[{"OAuth2PasswordBearer":[]}]}},"/storages/":{"get":{"tags":["storage"],"summary":"Get Storages","description":"It gets a list of storages from the database\n\nArgs:\n    crud: Depends (StorageCrud) - this is a dependency injection.\n\nReturns:\n    A list of storages.","operationId":"get_storages_storages__get","security":[{"OAuth2PasswordBearer":[]}],"parameters":[{"name":"page","in":"query","required":false,"schema":{"type":"integer","minimum":1,"description":"Page number","default":1,"title":"Page"},"description":"Page number"},{"name":"size","in":"query","required":false,"schema":{"type":"integer","maximum":100,"minimum":1,"description":"Page size","default":50,"title":"Size"},"description":"Page size"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Page_Storage_"}}}},"404":{"description":"Not found!"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/storages/local-disks/":{"get":{"tags":["storage"],"summary":"Get Local Disks","description":"It gets a list of free local disks\n\nArgs:\n    free_local_disks: flag on get free local disks\n    crud: This is the dependency that we created earlier.\n\nReturns:\n    A list of free local disks.","operationId":"get_local_disks_storages_local_disks__get","security":[{"OAuth2PasswordBearer":[]}],"parameters":[{"name":"free_local_disks","in":"query","required":false,"schema":{"anyOf":[{"type":"boolean"},{"type":"null"}],"title":"Free Local Disks"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ListOfLocalDisks"}}}},"404":{"description":"Not found!"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/storages/local-disks/create_partition/":{"post":{"tags":["storage"],"summary":"Create Local Partition","description":"Create a local disk partition.\n\nThis endpoint creates a new partition on a local disk based on the provided\ndata.\n\nArgs:\n    data (schemas.CreateLocalPartition): Data for creating the partition.\n    crud (StorageCrud): Dependency for CRUD operations.\n    user_data (Dict): User data\n\nReturns:\n    schemas.LocalDisk: Information about the newly created partition.","operationId":"create_local_partition_storages_local_disks_create_partition__post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateLocalPartition"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/LocalDisk"}}}},"404":{"description":"Not found!"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":[]}]}},"/storages/local-disks/partition_info/":{"get":{"tags":["storage"],"summary":"Get Local Disk Partitions Info","description":"Get information about local disk partitions.\n\nThis endpoint retrieves information about partitions on a specified local\ndisk.\n\nArgs:\n    disk_path (str): Path to the local disk.\n    unit (Optional[str]): unit of values about partitions\n    crud (StorageCrud): Dependency for CRUD operations.\n\nReturns:\n    Dict: Information about local disk partitions.","operationId":"get_local_disk_partitions_info_storages_local_disks_partition_info__get","security":[{"OAuth2PasswordBearer":[]}],"parameters":[{"name":"disk_path","in":"query","required":true,"schema":{"type":"string","title":"Disk Path"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found!"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/storages/local-disks/delete_partition/":{"delete":{"tags":["storage"],"summary":"Delete Local Partition","description":"Delete a local disk partition.\n\nThis endpoint deletes the specified local disk partition.\n\nArgs:\n    data (schemas.DeleteLocalPartition): Data for deleting the partition.\n    crud (StorageCrud): Dependency for CRUD operations.\n    user_data (Dict): User data\n\nReturns:\n    Dict: A message indicating the success of the operation.","operationId":"delete_local_partition_storages_local_disks_delete_partition__delete","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DeleteLocalPartition"}}},"required":true},"responses":{"202":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found!"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":[]}]}},"/storages/{storage_id}/":{"get":{"tags":["storage"],"summary":"Get Storage","description":"It gets a storage by id\n\nArgs:\n    storage_id (str): str = Query(None, description=\"Volume id\")\n    crud: Depends(StorageCrud) - this is a dependency injection.\n\nReturns:\n    The storage object.","operationId":"get_storage_storages__storage_id___get","security":[{"OAuth2PasswordBearer":[]}],"parameters":[{"name":"storage_id","in":"path","required":true,"schema":{"type":"string","format":"uuid","title":"Storage Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Storage"}}}},"404":{"description":"Not found!"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/storages/create/":{"post":{"tags":["storage"],"summary":"Create Storage","description":"It creates a storage\n\nArgs:\n    data (schemas.CreateStorage): schemas.CreateStorage - this is the data\n    that will be passed to the function.\n    user_data: The dependency that check user was authorized\n    crud: StorageCrud - this is the dependency that we will inject into the\n    function.\n\nReturns:\n    The storage object is being returned.","operationId":"create_storage_storages_create__post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateStorage"}}},"required":true},"responses":{"201":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Storage"}}}},"404":{"description":"Not found!"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":[]}]}},"/storages/{storage_id}/delete/":{"delete":{"tags":["storage"],"summary":"Delete Storage","description":"It deletes a storage\n\nArgs:\n    storage_id (str): str = Query(None, description=\"Storage id\")\n    user_data: The dependency that check user was authorized\n    crud: Depends(StorageCrud)\n\nReturns:\n    The storage object.","operationId":"delete_storage_storages__storage_id__delete__delete","security":[{"OAuth2PasswordBearer":[]}],"parameters":[{"name":"storage_id","in":"path","required":true,"schema":{"type":"string","format":"uuid","title":"Storage Id"}}],"responses":{"202":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Storage"}}}},"404":{"description":"Not found!"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/user/":{"get":{"tags":["user"],"summary":"Get User","description":"Retrieve current authenticated user information.\n\nArgs:\n    crud: UserCrud instance for performing CRUD operations.\n    user_dict: Dictionary containing current authenticated user data.\n\nReturns:\n    schemas.User: The current authenticated user's information.","operationId":"get_user_user__get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/User"}}}},"404":{"description":"Not found!"}},"security":[{"HTTPBearer":[]},{"OAuth2PasswordBearer":[]}]}},"/user/all/":{"get":{"tags":["user"],"summary":"Get Users","description":"Retrieve list of all users.\n\nArgs:\n    crud: UserCrud instance for performing CRUD operations.\n\nReturns:\n    JSONResponse: A paginated list of information about all users.","operationId":"get_users_user_all__get","security":[{"HTTPBearer":[]},{"OAuth2PasswordBearer":[]}],"parameters":[{"name":"page","in":"query","required":false,"schema":{"type":"integer","minimum":1,"description":"Page number","default":1,"title":"Page"},"description":"Page number"},{"name":"size","in":"query","required":false,"schema":{"type":"integer","maximum":100,"minimum":1,"description":"Page size","default":50,"title":"Size"},"description":"Page size"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Page_User_"}}}},"404":{"description":"Not found!"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/user/{user_id}/create/":{"post":{"tags":["user"],"summary":"Create User","description":"Create a new user and return the user's credentials.\n\nArgs:\n    data: User creation data including username, password, and email.\n    user_id: The ID of the current user (must be a superuser to create\n        new users).\n    user_data: Current authenticated user data.\n    crud: UserCrud instance for performing CRUD operations.\n\nReturns:\n    schemas.User: The created user's credentials.","operationId":"create_user_user__user_id__create__post","security":[{"HTTPBearer":[]},{"OAuth2PasswordBearer":[]}],"parameters":[{"name":"user_id","in":"path","required":true,"schema":{"type":"string","format":"uuid","title":"User Id"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserCreate"}}}},"responses":{"201":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/User"}}}},"404":{"description":"Not found!"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/user/{user_id}/":{"delete":{"tags":["user"],"summary":"Delete User","description":"Delete a user from the database.\n\nArgs:\n    user_id: The ID of the user to be deleted.\n    user_data: Current authenticated user data.\n    crud: UserCrud instance for performing CRUD operations.\n\nReturns:\n    schemas.UserDelete: Result of the delete operation.","operationId":"delete_user_user__user_id___delete","security":[{"HTTPBearer":[]},{"OAuth2PasswordBearer":[]}],"parameters":[{"name":"user_id","in":"path","required":true,"schema":{"type":"string","format":"uuid","title":"User Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserDelete"}}}},"404":{"description":"Not found!"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/user/{user_id}/change-password/":{"post":{"tags":["user"],"summary":"Change Password","description":"Change the password for a user.\n\nArgs:\n    data: New password data.\n    user_id: The ID of the user whose password is to be changed.\n    crud: UserCrud instance for performing CRUD operations.\n\nReturns:\n    schemas.User: The user's updated information after changing the\n        password.","operationId":"change_password_user__user_id__change_password__post","security":[{"HTTPBearer":[]},{"OAuth2PasswordBearer":[]}],"parameters":[{"name":"user_id","in":"path","required":true,"schema":{"type":"string","format":"uuid","title":"User Id"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserChangePassword"}}}},"responses":{"201":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/User"}}}},"404":{"description":"Not found!"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/auth/":{"post":{"tags":["auth"],"summary":"Auth","description":"Authenticate a user and return access and refresh tokens.\n\nArgs:\n    form_data: The form data containing username and password.\n    crud: UserCrud instance for performing CRUD operations.\n\nReturns:\n   Dict: A dictionary containing access and refresh tokens and\n        the token type.","operationId":"auth_auth__post","requestBody":{"content":{"application/x-www-form-urlencoded":{"schema":{"$ref":"#/components/schemas/Body_auth_auth__post"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Token"}}}},"404":{"description":"Not found!"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/auth/refresh":{"post":{"tags":["auth"],"summary":"Refresh Token","description":"Refresh an access token using a refresh token.\n\nArgs:\n    refresh_token: The refresh token provided by the user.\n\nReturns:\n   Dict: A dictionary containing the new access token, refresh token,\n        and token type.\n\nRaises:\n    HTTPException: If the refresh token is expired or invalid.","operationId":"refresh_token_auth_refresh_post","parameters":[{"name":"refresh_token","in":"query","required":true,"schema":{"type":"string","title":"Refresh Token"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Token"}}}},"404":{"description":"Not found!"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/volumes/":{"get":{"tags":["volume"],"summary":"Get Volumes","description":"Retrieve all volumes from the database.\n\nArgs:\n    storage_id (Optional[str]): The ID of the storage to filter volumes by.\n    free_volumes (Optional[bool]): If True, return only volumes without\n        attachments.\n    crud (VolumeCrud): Dependency that handles the CRUD operations.\n\nReturns:\n    JSONResponse: A paginated list of volumes.","operationId":"get_volumes_volumes__get","security":[{"OAuth2PasswordBearer":[]}],"parameters":[{"name":"storage_id","in":"query","required":false,"schema":{"anyOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Storage ID","title":"Storage Id"},"description":"Storage ID"},{"name":"free_volumes","in":"query","required":false,"schema":{"type":"boolean","description":"Flag on getting volumes without attachments.","default":false,"title":"Free Volumes"},"description":"Flag on getting volumes without attachments."},{"name":"page","in":"query","required":false,"schema":{"type":"integer","minimum":1,"description":"Page number","default":1,"title":"Page"},"description":"Page number"},{"name":"size","in":"query","required":false,"schema":{"type":"integer","maximum":100,"minimum":1,"description":"Page size","default":50,"title":"Size"},"description":"Page size"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Page_Volume_"}}}},"404":{"description":"Not found!"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/volumes/{volume_id}/":{"get":{"tags":["volume"],"summary":"Get Volume","description":"Retrieve a specific volume by its ID.\n\nArgs:\n    volume_id (str): The ID of the volume to retrieve.\n    crud (VolumeCrud): Dependency that handles the CRUD operations.\n\nReturns:\n    JSONResponse: The serialized volume object.","operationId":"get_volume_volumes__volume_id___get","security":[{"OAuth2PasswordBearer":[]}],"parameters":[{"name":"volume_id","in":"path","required":true,"schema":{"type":"string","format":"uuid","title":"Volume Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Volume"}}}},"404":{"description":"Not found!"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"delete":{"tags":["volume"],"summary":"Delete Volume","description":"Delete an existing volume.\n\nArgs:\n    volume_id (str): The ID of the volume to delete.\n    user_info (Dict): Information about the authenticated user.\n    crud (VolumeCrud): Dependency that handles the CRUD operations.\n\nReturns:\n    JSONResponse: The deleted volume object.","operationId":"delete_volume_volumes__volume_id___delete","security":[{"OAuth2PasswordBearer":[]}],"parameters":[{"name":"volume_id","in":"path","required":true,"schema":{"type":"string","format":"uuid","title":"Volume Id"}}],"responses":{"202":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Volume"}}}},"404":{"description":"Not found!"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/volumes/create/":{"post":{"tags":["volume"],"summary":"Create Volume","description":"Create a new volume.\n\nArgs:\n    data (schemas.CreateVolume): The data required to create the volume.\n    user_info (Dict): Information about the authenticated user.\n    crud (VolumeCrud): Dependency that handles the CRUD operations.\n\nReturns:\n    JSONResponse: The created volume object.","operationId":"create_volume_volumes_create__post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateVolume"}}},"required":true},"responses":{"201":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Volume"}}}},"404":{"description":"Not found!"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":[]}]}},"/volumes/{volume_id}/extend/":{"post":{"tags":["volume"],"summary":"Extend Volume","description":"Extend an existing volume to a new size.\n\nArgs:\n    volume_id (str): The ID of the volume to extend.\n    data (schemas.ExtendVolume): The new size of the volume.\n    user_info (Dict): Information about the authenticated user.\n    crud (VolumeCrud): Dependency that handles the CRUD operations.\n\nReturns:\n    JSONResponse: The extended volume object.","operationId":"extend_volume_volumes__volume_id__extend__post","security":[{"OAuth2PasswordBearer":[]}],"parameters":[{"name":"volume_id","in":"path","required":true,"schema":{"type":"string","format":"uuid","title":"Volume Id"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ExtendVolume"}}}},"responses":{"201":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Volume"}}}},"404":{"description":"Not found!"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/volumes/{volume_id}/edit/":{"put":{"tags":["volume"],"summary":"Edit Volume","description":"Edit an existing volume's metadata.\n\nArgs:\n    volume_id (str): The ID of the volume to edit.\n    data (schemas.EditVolume): The new metadata for the volume.\n    user_info (Dict): Information about the authenticated user.\n    crud (VolumeCrud): Dependency that handles the CRUD operations.\n\nReturns:\n    JSONResponse: The updated volume object.","operationId":"edit_volume_volumes__volume_id__edit__put","security":[{"OAuth2PasswordBearer":[]}],"parameters":[{"name":"volume_id","in":"path","required":true,"schema":{"type":"string","format":"uuid","title":"Volume Id"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/EditVolume"}}}},"responses":{"201":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Volume"}}}},"404":{"description":"Not found!"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/volumes/{volume_id}/attach/":{"post":{"tags":["volume"],"summary":"Attach Volume","description":"Attach a volume to a virtual machine.\n\nArgs:\n    volume_id (str): The ID of the volume to be attached.\n    data (schemas.AttachVolume): Information about the attachment.\n    user_info (Dict): Information about the authenticated user.\n    crud (VolumeCrud): Dependency that handles the CRUD operations.\n\nReturns:\n    JSONResponse: Information about the attached volume.","operationId":"attach_volume_volumes__volume_id__attach__post","security":[{"OAuth2PasswordBearer":[]}],"parameters":[{"name":"volume_id","in":"path","required":true,"schema":{"type":"string","format":"uuid","title":"Volume Id"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/intakevms__modules__volume__entrypoints__schemas__AttachVolume"}}}},"responses":{"201":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AttachVolumeInfo"}}}},"404":{"description":"Not found!"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/volumes/{volume_id}/detach/":{"delete":{"tags":["volume"],"summary":"Detach Volume","description":"Detach a volume from a virtual machine.\n\nArgs:\n    volume_id (str): The ID of the volume to be detached.\n    detach_info (schemas.DetachVolume): Information about the detachment.\n    user_info (Dict): Information about the authenticated user.\n    crud (VolumeCrud): Dependency that handles the CRUD operations.\n\nReturns:\n    JSONResponse: The detached volume object.","operationId":"detach_volume_volumes__volume_id__detach__delete","security":[{"OAuth2PasswordBearer":[]}],"parameters":[{"name":"volume_id","in":"path","required":true,"schema":{"type":"string","format":"uuid","title":"Volume Id"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DetachVolume"}}}},"responses":{"201":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Volume"}}}},"404":{"description":"Not found!"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/volumes/from_template/":{"post":{"tags":["volume"],"summary":"Create From Template","operationId":"create_from_template_volumes_from_template__post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateVolumeFromTemplate"}}},"required":true},"responses":{"201":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Volume"}}}},"404":{"description":"Not found!"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":[]}]}},"/images/":{"get":{"tags":["image"],"summary":"Get Images","description":"Retrieve a paginated list of images.\n\nThis endpoint allows retrieving all images stored in the database, with\nan optional filter by a specific storage ID. It uses the `ImageCrud`\nservice to interact with the storage backend.\n\nArgs:\n    storage_id (Optional[str]): Storage ID to filter images by.\n    crud (ImageCrud): Dependency injection for CRUD operations.\n\nDependencies:\n    - User authentication via `get_current_user`.\n\nReturns:\n    Page[schemas.Image]: A paginated response containing metadata of\n    images matching the filter criteria, if provided.","operationId":"get_images_images__get","security":[{"OAuth2PasswordBearer":[]}],"parameters":[{"name":"storage_id","in":"query","required":false,"schema":{"anyOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Storage id (UUID4)","title":"Storage Id"},"description":"Storage id (UUID4)"},{"name":"page","in":"query","required":false,"schema":{"type":"integer","minimum":1,"description":"Page number","default":1,"title":"Page"},"description":"Page number"},{"name":"size","in":"query","required":false,"schema":{"type":"integer","maximum":100,"minimum":1,"description":"Page size","default":50,"title":"Size"},"description":"Page size"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Page_Image_"}}}},"404":{"description":"Not found!"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/images/{image_id}/":{"get":{"tags":["image"],"summary":"Get Image","description":"Retrieve metadata of a specific image by its ID.\n\nThis endpoint fetches metadata of an image specified by its ID using\nthe `ImageCrud` service.\n\nArgs:\n    image_id (str): ID of the image to retrieve.\n    crud (ImageCrud): Dependency injection for CRUD operations.\n\nDependencies:\n    - User authentication via `get_current_user`.\n\nReturns:\n    schemas.Image: Metadata of the specified image.","operationId":"get_image_images__image_id___get","security":[{"OAuth2PasswordBearer":[]}],"parameters":[{"name":"image_id","in":"path","required":true,"schema":{"type":"string","format":"uuid","title":"Image Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Image"}}}},"404":{"description":"Not found!"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"delete":{"tags":["image"],"summary":"Delete Image","description":"Delete an image by its ID.\n\nThis endpoint deletes an image specified by its ID using the `ImageCrud`\nservice.\n\nArgs:\n    image_id (str): ID of the image to delete.\n    user_info (Dict): Authorized user information.\n    crud (ImageCrud): Dependency injection for CRUD operations.\n\nDependencies:\n    - User authentication via `get_current_user`.\n\nReturns:\n    JSONResponse: A response confirming successful deletion.","operationId":"delete_image_images__image_id___delete","security":[{"OAuth2PasswordBearer":[]}],"parameters":[{"name":"image_id","in":"path","required":true,"schema":{"type":"string","format":"uuid","title":"Image Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found!"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/images/upload/":{"post":{"tags":["image"],"summary":"Upload Image","description":"Upload a new image to the storage.\n\nThis endpoint reads the uploaded image file, saves it temporarily, and\nuploads it to the specified storage using the `ImageCrud` service.\n\nArgs:\n    description (str): Description of the image.\n    storage_id (str): ID of the storage where the image will be saved.\n    name (str): Name of the image file.\n    image (UploadFile): The uploaded image file.\n    user_info (Dict): Authorized user information.\n    crud (ImageCrud): Dependency injection for CRUD operations.\n\nDependencies:\n    - User authentication via `get_current_user`.\n\nReturns:\n    schemas.Image: Metadata of the uploaded image.\n\nRaises:\n    HTTPException: If the file name exceeds the allowed length or if\n    the file extension is unsupported.","operationId":"upload_image_images_upload__post","security":[{"OAuth2PasswordBearer":[]}],"parameters":[{"name":"storage_id","in":"query","required":true,"schema":{"type":"string","format":"uuid","title":"Storage Id"}},{"name":"description","in":"query","required":false,"schema":{"type":"string","description":"Image description","default":"","title":"Description"},"description":"Image description"},{"name":"name","in":"query","required":true,"schema":{"type":"string","description":"Image name","max_size":40,"title":"Name"},"description":"Image name"}],"requestBody":{"required":true,"content":{"multipart/form-data":{"schema":{"$ref":"#/components/schemas/Body_upload_image_images_upload__post"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Image"}}}},"404":{"description":"Not found!"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/images/{image_id}/attach/":{"post":{"tags":["image"],"summary":"Attach Image","description":"Attach an image to a virtual machine (VM).\n\nThis endpoint attaches an image specified by its ID to a virtual machine\n(VM) using the `ImageCrud` service.\n\nArgs:\n    data (schemas.AttachImage): Data containing the VM ID to which\n    the image will be attached.\n    image_id (str): ID of the image to attach.\n    user_info (Dict): Authorized user information.\n    crud (ImageCrud): Dependency injection for CRUD operations.\n\nDependencies:\n    - User authentication via `get_current_user`.\n\nReturns:\n    schemas.AttachImageInfo: Metadata of the attached image.","operationId":"attach_image_images__image_id__attach__post","security":[{"OAuth2PasswordBearer":[]}],"parameters":[{"name":"image_id","in":"path","required":true,"schema":{"type":"string","format":"uuid","title":"Image Id"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/intakevms__modules__image__entrypoints__schemas__AttachImage"}}}},"responses":{"201":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AttachImageInfo"}}}},"404":{"description":"Not found!"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/images/{image_id}/detach/":{"delete":{"tags":["image"],"summary":"Detach Image","description":"Detach an image from a virtual machine (VM).\n\nThis endpoint detaches an image specified by its ID from a virtual\nmachine (VM) using the `ImageCrud` service.\n\nArgs:\n    detach_info (schemas.DetachImage): Data containing the VM ID from\n    which the image will be detached.\n    image_id (str): ID of the image to detach.\n    user_info (Dict): Authorized user information.\n    crud (ImageCrud): Dependency injection for CRUD operations.\n\nDependencies:\n    - User authentication via `get_current_user`.\n\nReturns:\n    schemas.Image: Metadata of the detached image.","operationId":"detach_image_images__image_id__detach__delete","security":[{"OAuth2PasswordBearer":[]}],"parameters":[{"name":"image_id","in":"path","required":true,"schema":{"type":"string","format":"uuid","title":"Image Id"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DetachImage"}}}},"responses":{"201":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Image"}}}},"404":{"description":"Not found!"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/virtual-machines/":{"get":{"tags":["virtual-machine"],"summary":"Get Vms","description":"Retrieve all virtual machines.\n\nArgs:\n    crud (VMCrud): The CRUD dependency for virtual machine operations.\n\nReturns:\n    Page[schemas.VirtualMachineInfo]: A paginated list of all virtual\n    machines.","operationId":"get_vms_virtual_machines__get","security":[{"OAuth2PasswordBearer":[]}],"parameters":[{"name":"page","in":"query","required":false,"schema":{"type":"integer","minimum":1,"description":"Page number","default":1,"title":"Page"},"description":"Page number"},{"name":"size","in":"query","required":false,"schema":{"type":"integer","maximum":100,"minimum":1,"description":"Page size","default":50,"title":"Size"},"description":"Page size"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Page_VirtualMachineInfo_"}}}},"404":{"description":"Not found!"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/virtual-machines/{vm_id}/":{"get":{"tags":["virtual-machine"],"summary":"Get Vm","description":"Retrieve a virtual machine by ID.\n\nArgs:\n    vm_id (str): The ID of the virtual machine to retrieve.\n    crud (VMCrud): The CRUD dependency for virtual machine operations.\n\nReturns:\n    schemas.VirtualMachineInfo: The virtual machine data.","operationId":"get_vm_virtual_machines__vm_id___get","security":[{"OAuth2PasswordBearer":[]}],"parameters":[{"name":"vm_id","in":"path","required":true,"schema":{"type":"string","description":"VM ID","title":"Vm Id"},"description":"VM ID"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/VirtualMachineInfo"}}}},"404":{"description":"Not found!"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"delete":{"tags":["virtual-machine"],"summary":"Delete Vm","description":"Delete a virtual machine by ID.\n\nArgs:\n    vm_id (str): The ID of the virtual machine to delete.\n    user_info (Dict): The dependency to ensure the user is authenticated.\n    crud (VMCrud): The CRUD dependency for virtual machine operations.\n\nReturns:\n    JSONResponse: The response indicating the result of the deletion.","operationId":"delete_vm_virtual_machines__vm_id___delete","security":[{"OAuth2PasswordBearer":[]}],"parameters":[{"name":"vm_id","in":"path","required":true,"schema":{"type":"string","title":"Vm Id"}}],"responses":{"201":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found!"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/virtual-machines/create/":{"post":{"tags":["virtual-machine"],"summary":"Create Vm","description":"Create a new virtual machine.\n\nArgs:\n    data (schemas.CreateVirtualMachine): The data required to create a\n        new virtual machine.\n    user_info (Dict): The dependency to ensure the user is authenticated.\n    crud (VMCrud): The CRUD dependency for virtual machine operations.\n\nReturns:\n    schemas.VirtualMachineInfo: The created virtual machine data.","operationId":"create_vm_virtual_machines_create__post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateVirtualMachine"}}},"required":true},"responses":{"201":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/VirtualMachineInfo"}}}},"404":{"description":"Not found!"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":[]}]}},"/virtual-machines/{vm_id}/start/":{"post":{"tags":["virtual-machine"],"summary":"Start Vm","description":"Start a virtual machine by ID.\n\nArgs:\n    vm_id (str): The ID of the virtual machine to start.\n    user_info (Dict): The dependency to ensure the user is authenticated.\n    crud (VMCrud): The CRUD dependency for virtual machine operations.\n\nReturns:\n    schemas.VirtualMachineInfo: The virtual machine data.","operationId":"start_vm_virtual_machines__vm_id__start__post","security":[{"OAuth2PasswordBearer":[]}],"parameters":[{"name":"vm_id","in":"path","required":true,"schema":{"type":"string","title":"Vm Id"}}],"responses":{"201":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/VirtualMachineInfo"}}}},"404":{"description":"Not found!"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/virtual-machines/{vm_id}/shut-off/":{"post":{"tags":["virtual-machine"],"summary":"Shut Off Vm","description":"Shut off a virtual machine by ID.\n\nArgs:\n    vm_id (str): The ID of the virtual machine to shut off.\n    user_info (Dict): The dependency to ensure the user is authenticated.\n    crud (VMCrud): The CRUD dependency for virtual machine operations.\n\nReturns:\n    schemas.VirtualMachineInfo: The virtual machine data.","operationId":"shut_off_vm_virtual_machines__vm_id__shut_off__post","security":[{"OAuth2PasswordBearer":[]}],"parameters":[{"name":"vm_id","in":"path","required":true,"schema":{"type":"string","title":"Vm Id"}}],"responses":{"201":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/VirtualMachineInfo"}}}},"404":{"description":"Not found!"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/virtual-machines/{vm_id}/edit/":{"post":{"tags":["virtual-machine"],"summary":"Edit Vm","description":"Edit a virtual machine by ID.\n\nArgs:\n    vm_id (str): The ID of the virtual machine to edit.\n    data (schemas.EditVm): The data to update the virtual machine.\n    user_info (Dict): The dependency to ensure the user is authenticated.\n    crud (VMCrud): The CRUD dependency for virtual machine operations.\n\nReturns:\n    schemas.VirtualMachineInfo: The updated virtual machine data.","operationId":"edit_vm_virtual_machines__vm_id__edit__post","security":[{"OAuth2PasswordBearer":[]}],"parameters":[{"name":"vm_id","in":"path","required":true,"schema":{"type":"string","title":"Vm Id"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/EditVm"}}}},"responses":{"201":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/VirtualMachineInfo"}}}},"404":{"description":"Not found!"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/virtual-machines/{vm_id}/vnc/":{"get":{"tags":["virtual-machine"],"summary":"Vnc Vm","description":"Access the VNC session of a virtual machine by ID.\n\nArgs:\n    vm_id (str): The ID of the virtual machine.\n    user_info (Dict): The dependency to ensure the user is authenticated.\n    crud (VMCrud): The CRUD dependency for virtual machine operations.\n\nReturns:\n    schemas.Vnc: The VNC session details.","operationId":"vnc_vm_virtual_machines__vm_id__vnc__get","security":[{"OAuth2PasswordBearer":[]}],"parameters":[{"name":"vm_id","in":"path","required":true,"schema":{"type":"string","title":"Vm Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Vnc"}}}},"404":{"description":"Not found!"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/virtual-machines/{vm_id}/clone/":{"post":{"tags":["virtual-machine"],"summary":"Clone Vm","description":"Clone a virtual machine.\n\nArgs:\n    vm_id (str): The ID of the virtual machine to copy.\n    data (schemas.CloneVm): The data to clone the virtual machine.\n    user_info (Dict): The dependency to ensure the user is authenticated.\n    crud (VMCrud): The CRUD dependency for virtual machine operations.\n\nReturns:\n    List[schemas.VirtualMachineInfo]: The list of cloned virtual machine","operationId":"clone_vm_virtual_machines__vm_id__clone__post","security":[{"OAuth2PasswordBearer":[]}],"parameters":[{"name":"vm_id","in":"path","required":true,"schema":{"type":"string","description":"Id of vm that will be cloned","title":"Vm Id"},"description":"Id of vm that will be cloned"}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CloneVm"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/VirtualMachineInfo"},"title":"Response Clone Vm Virtual Machines  Vm Id  Clone  Post"}}}},"404":{"description":"Not found!"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/virtual-machines/{vm_id}/snapshots/":{"get":{"tags":["virtual-machine"],"summary":"Get Snapshots","description":"Retrieve all snapshots of the specific virtual machine.\n\nArgs:\n    vm_id (UUID): The ID of the virtual machine.\n    user_info (Dict): The dependency to ensure the user is authenticated.\n    crud (VMCrud): The CRUD dependency for virtual machine operations.\n\nReturns:\n    schemas.ListOfSnapshots: A list of all snapshots of the specific\n    virtual machine.","operationId":"get_snapshots_virtual_machines__vm_id__snapshots__get","security":[{"OAuth2PasswordBearer":[]}],"parameters":[{"name":"vm_id","in":"path","required":true,"schema":{"type":"string","format":"uuid","title":"Vm Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ListOfSnapshots"}}}},"404":{"description":"Not found!"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"post":{"tags":["virtual-machine"],"summary":"Create Snapshot","description":"Create a new snapshot of the virtual machine.\n\nArgs:\n    vm_id (UUID): The ID of the virtual machine where the snapshot will be\n    created.\n    data (schemas.CreateSnapshot): The data required to create a new\n    snapshot of the virtual machine.\n    user_info (Dict): The dependency to ensure the user is authenticated.\n    crud (VMCrud): The CRUD dependency for virtual machine operations.\n\nReturns:\n    Dict: The created snapshot data.","operationId":"create_snapshot_virtual_machines__vm_id__snapshots__post","security":[{"OAuth2PasswordBearer":[]}],"parameters":[{"name":"vm_id","in":"path","required":true,"schema":{"type":"string","format":"uuid","title":"Vm Id"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateSnapshot"}}}},"responses":{"201":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SnapshotInfo"}}}},"404":{"description":"Not found!"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/virtual-machines/{vm_id}/snapshots/{snap_id}":{"get":{"tags":["virtual-machine"],"summary":"Get Snapshot","description":"Retrieve a snapshot of a specific virtual machine by snapshot ID.\n\nArgs:\n    vm_id (UUID): The ID of the virtual machine.\n    snap_id (UUID): The ID of the snapshot.\n    user_info (Dict): The dependency to ensure the user is authenticated.\n    crud (VMCrud): The CRUD dependency for virtual machine operations.\n\nReturns:\n    schemas.SnapshotInfo: The snapshot data.","operationId":"get_snapshot_virtual_machines__vm_id__snapshots__snap_id__get","security":[{"OAuth2PasswordBearer":[]}],"parameters":[{"name":"vm_id","in":"path","required":true,"schema":{"type":"string","format":"uuid","title":"Vm Id"}},{"name":"snap_id","in":"path","required":true,"schema":{"type":"string","format":"uuid","title":"Snap Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SnapshotInfo"}}}},"404":{"description":"Not found!"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"delete":{"tags":["virtual-machine"],"summary":"Delete Snapshot","description":"Delete a snapshot of virtual machine.\n\nArgs:\n    vm_id (UUID): The ID of the virtual machine where snapshot will be\n    deleted.\n    snap_id (UUID): The ID of the snapshot to delete.\n    user_info (Dict): The dependency to ensure the user is authenticated.\n    crud (VMCrud): The CRUD dependency for virtual machine operations.\n\nReturns:\n    schemas.SnapshotInfo: The deleted snapshot data.","operationId":"delete_snapshot_virtual_machines__vm_id__snapshots__snap_id__delete","security":[{"OAuth2PasswordBearer":[]}],"parameters":[{"name":"vm_id","in":"path","required":true,"schema":{"type":"string","format":"uuid","title":"Vm Id"}},{"name":"snap_id","in":"path","required":true,"schema":{"type":"string","format":"uuid","title":"Snap Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SnapshotInfo"}}}},"404":{"description":"Not found!"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/virtual-machines/{vm_id}/snapshots/{snap_id}/revert":{"post":{"tags":["virtual-machine"],"summary":"Revert Snapshot","description":"Revert a virtual machine to a snapshot.\n\nArgs:\n    vm_id (UUID): The ID of the virtual machine where the snapshot will be\n    reverted.\n    snap_id (UUID): The ID of the snapshot to revert.\n    user_info (Dict): The dependency to ensure the user is authenticated.\n    crud (VMCrud): The CRUD dependency for virtual machine operations.\n\nReturns:\n    schemas.SnapshotInfo: The reverted snapshot data.","operationId":"revert_snapshot_virtual_machines__vm_id__snapshots__snap_id__revert_post","security":[{"OAuth2PasswordBearer":[]}],"parameters":[{"name":"vm_id","in":"path","required":true,"schema":{"type":"string","format":"uuid","title":"Vm Id"}},{"name":"snap_id","in":"path","required":true,"schema":{"type":"string","format":"uuid","title":"Snap Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SnapshotInfo"}}}},"404":{"description":"Not found!"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/event/":{"get":{"tags":["event"],"summary":"Get Events","description":"Retrieve all events from the database.\n\nThis endpoint retrieves all events using the EventCrud class and returns\nthem in a paginated format.\n\nArgs:\n    crud (EventCrud): Instance of EventCrud for database operations.\n\nReturns:\n    Page[schemas.Event]: A paginated list of events.\n\nRaises:\n    HTTPException: If any database error occurs or events are not found.","operationId":"get_events_event__get","security":[{"OAuth2PasswordBearer":[]}],"parameters":[{"name":"module_name","in":"query","required":false,"schema":{"type":"string","default":"event-store","title":"Module Name"}},{"name":"page","in":"query","required":false,"schema":{"type":"integer","minimum":1,"description":"Page number","default":1,"title":"Page"},"description":"Page number"},{"name":"size","in":"query","required":false,"schema":{"type":"integer","maximum":100,"minimum":1,"description":"Page size","default":50,"title":"Size"},"description":"Page size"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Page_Event_"}}}},"404":{"description":"Not found!"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/event/download":{"get":{"tags":["event"],"summary":"Download Events","description":"Download all events as a CSV file.\n\nThis endpoint retrieves all events using the EventCrud class, generates\na CSV file containing the event data, and returns it as a streaming\nresponse.\n\nArgs:\n    crud (EventCrud): Instance of EventCrud for database operations.\n\nReturns:\n    StreamingResponse: A streaming response with the CSV file content.","operationId":"download_events_event_download_get","security":[{"OAuth2PasswordBearer":[]}],"parameters":[{"name":"module_name","in":"query","required":false,"schema":{"type":"string","default":"event-store","title":"Module Name"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DownloadResponse"}}}},"404":{"description":"Not found!"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/notifications/send/":{"post":{"tags":["notification"],"summary":"Send Notification","description":"Send a notification to the specified recipients.\n\nThis endpoint sends a notification based on the provided data. The\nnotification is processed and sent asynchronously.\n\nArgs:\n    data (schemas.Notification): Information about the notification to send.\n    crud (NotificationCrud): Dependency injection for the NotificationCrud\n        class.\n\nReturns:\n    schemas.Notification: The notification object retrieved from the\n        database.\n\nRaises:\n    JSONResponse: If the notification sending fails, a 500 error response\n        is returned with the error details.","operationId":"send_notification_notifications_send__post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Notification"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Notification"}}}},"404":{"description":"Not found!"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":[]}]}},"/block-devices/sessions":{"get":{"tags":["block-devices"],"summary":"Get Sessions","description":"Retrieve sessions associated with block devices.\n\nArgs:\n    crud (InterfaceCrud, optional): An instance of the `InterfaceCrud`\n        interface that provides access to the database.\n        Defaults to `Depends(InterfaceCrud)`.\n\nReturns:\n    List[schemas.Session]: A list of schemas.Session representing the\n        sessions. Each object contains information about a session\n\nRaises:\n    HTTPException: If there is an error while retrieving the sessions, it\n        raises an HTTPException with an appropriate status code and error\n        message.","operationId":"get_sessions_block_devices_sessions_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Session"},"type":"array","title":"Response Get Sessions Block Devices Sessions Get"}}}},"404":{"description":"Not found!"}},"security":[{"OAuth2PasswordBearer":[]}]}},"/block-devices/get-iqn":{"get":{"tags":["block-devices"],"summary":"Get Host Iqn","description":"Gets the IQN associated with the current host.\n\nArgs:\n    crud (InterfaceCrud, optional): An instance of the `InterfaceCrud`\n        interface that provides access to the necessary data.\n        Defaults to `Depends(InterfaceCrud)`.\n\nReturns:\n    schemas.IQN: A `schemas.IQN` object containing the IQN associated with\n        the current host.\n\nRaises:\n    HTTPException: If there is an error while retrieving the host IQN, this\n        function raises an `HTTPException` with an appropriate status code\n        and error message.","operationId":"get_host_iqn_block_devices_get_iqn_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/IQN"}}}},"404":{"description":"Not found!"}},"security":[{"OAuth2PasswordBearer":[]}]}},"/block-devices/login":{"post":{"tags":["block-devices"],"summary":"Login","description":"Log in to the specified iSCSI target.\n\nArgs:\n    data (schemas.Interface): The data required for the login operation,\n        such as target details, authentication credentials, etc.\n    user_data (Dict, optional): Additional user data to be included in the\n        request.\n        Defaults to `Depends(get_current_user)`.\n    crud (InterfaceCrud, optional): An instance of the `InterfaceCrud`\n        interface that provides access to the necessary data for the login\n        operation. Defaults to `Depends(InterfaceCrud)`.\n\nReturns:\n    schemas.InterfaceLogin: A `schemas.InterfaceLogin` object containing the\n        result of the login operation.\n\nRaises:\n    HTTPException: If there is an error while logging in to the iSCSI\n        target, this function raises an `HTTPException` with an appropriate\n        status code and error message.","operationId":"login_block_devices_login_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/intakevms__modules__block_device__entrypoints__schemas__Interface"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InterfaceLogin"}}}},"404":{"description":"Not found!"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":[]}]}},"/block-devices/logout":{"post":{"tags":["block-devices"],"summary":"Logout","description":"Log out from the specified iSCSI target.\n\nArgs:\n    data (schemas.InterfaceDeleted): The data required for the logout\n        operation.\n    user_data (Dict, optional): Additional user data to be included in the\n        request. Defaults to Depends(get_current_user).\n    crud (InterfaceCrud, optional): The InterfaceCrud instance to use for\n        the logout operation. Defaults to Depends(InterfaceCrud).\n\nReturns:\n    schemas.InterfaceDeleted: The result of the logout operation.","operationId":"logout_block_devices_logout_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/InterfaceDeleted"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InterfaceDeleted"}}}},"404":{"description":"Not found!"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":[]}]}},"/block-devices/lip_scan":{"get":{"tags":["block-devices"],"summary":"Lip Scan","description":"Perform LIP scan on Fibre Channel host adapters.\n\nLIP - Loop Initialization Protocol\n\nArgs:\n    crud (InterfaceCrud, optional): An instance of the `InterfaceCrud`\n        interface that provides access to the necessary functionality for\n        performing the LIP scan.\n        Defaults to `Depends(InterfaceCrud)`.\n\nReturns:\n    str: A message about the result of the LIP scan.\n\nRaises:\n    OSError: If there is an error accessing or writing to the 'issue_lip'\n        file while performing the LIP scan.","operationId":"lip_scan_block_devices_lip_scan_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"string","title":"Response Lip Scan Block Devices Lip Scan Get"}}}},"404":{"description":"Not found!"}},"security":[{"OAuth2PasswordBearer":[]}]}},"/virtual_networks/":{"get":{"tags":["virtual_network"],"summary":"Get Virtual Networks","description":"Retrieves a list of virtual networks.\n\nArgs:\n    crud: VirtualNetworkCrud instance injected by FastAPI.\n\nReturns:\n    ListOfVirtualNetworksResponse: A list of virtual networks.\n\nResponses:\n    200: Successful request. Returns a list of virtual networks.\n    400: Request error. Returns an ErrorResponseModel.","operationId":"get_virtual_networks_virtual_networks__get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ListOfVirtualNetworksResponse"}}}},"404":{"description":"Not found!"},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponseModel"}}}}}}},"/virtual_networks/{virtual_network_id}/":{"get":{"tags":["virtual_network"],"summary":"Get Virtual Network By Id","description":"Retrieves a virtual network by its ID.\n\nArgs:\n    virtual_network_id (str): The ID of the virtual network.\n    crud: VirtualNetworkCrud instance injected by FastAPI.\n\nReturns:\n    VirtualNetworkResponse: The virtual network corresponding to the\n    provided ID.\n\nResponses:\n    200: Successful request. Returns the virtual network.\n    400: Request error. Returns an ErrorResponseModel.","operationId":"get_virtual_network_by_id_virtual_networks__virtual_network_id___get","security":[{"OAuth2PasswordBearer":[]}],"parameters":[{"name":"virtual_network_id","in":"path","required":true,"schema":{"type":"string","format":"uuid","title":"Virtual Network Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/VirtualNetworkResponse"}}}},"404":{"description":"Not found!"},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponseModel"}}},"description":"Bad Request"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/virtual_networks/{virtual_network_name}":{"get":{"tags":["virtual_network"],"summary":"Get Virtual Network By Name","description":"Retrieves a virtual network by its name.\n\nArgs:\n    virtual_network_name (str): The name of the virtual network.\n    crud: VirtualNetworkCrud instance injected by FastAPI.\n\nReturns:\n    VirtualNetworkResponse: The virtual network corresponding to the\n    provided name.\n\nResponses:\n    200: Successful request. Returns the virtual network.\n    400: Request error. Returns an ErrorResponseModel.","operationId":"get_virtual_network_by_name_virtual_networks__virtual_network_name__get","security":[{"OAuth2PasswordBearer":[]}],"parameters":[{"name":"virtual_network_name","in":"path","required":true,"schema":{"type":"string","title":"Virtual Network Name"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/VirtualNetworkResponse"}}}},"404":{"description":"Not found!"},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponseModel"}}},"description":"Bad Request"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/virtual_networks/create/":{"post":{"tags":["virtual_network"],"summary":"Create Virtual Network","description":"Creates a new virtual network.\n\nArgs:\n    data (schemas.VirtualNetwork): Data representing the virtual network\n        to be created.\n    user_info: User information injected by FastAPI.\n    crud: VirtualNetworkCrud instance injected by FastAPI.\n\nReturns:\n    VirtualNetworkResponse: The newly created virtual network.\n\nResponses:\n    200: Successful request. Returns the newly created virtual network.\n    400: Request error. Returns an ErrorResponseModel.","operationId":"create_virtual_network_virtual_networks_create__post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/VirtualNetwork"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/VirtualNetworkResponse"}}}},"404":{"description":"Not found!"},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponseModel"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":[]}]}},"/virtual_networks/{virtual_network_id}":{"delete":{"tags":["virtual_network"],"summary":"Delete Virtual Network","description":"Deletes a virtual network by its ID.\n\nArgs:\n    virtual_network_id (str): The ID of the virtual network to be deleted.\n    user_info: User information injected by FastAPI.\n    crud: VirtualNetworkCrud instance injected by FastAPI.\n\nReturns:\n    JSONResponse: A message indicating the success of the delete operation.\n\nResponses:\n    200: Successful request. Returns a message indicating the success of\n    the delete operation.","operationId":"delete_virtual_network_virtual_networks__virtual_network_id__delete","security":[{"OAuth2PasswordBearer":[]}],"parameters":[{"name":"virtual_network_id","in":"path","required":true,"schema":{"type":"string","format":"uuid","title":"Virtual Network Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found!"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/virtual_networks/{virtual_network_id}/turn_on":{"put":{"tags":["virtual_network"],"summary":"Turn On Virtual Network","description":"Turns on a virtual network identified by its ID.\n\nArgs:\n    virtual_network_id (str): The ID of the virtual network to be turned on.\n    crud: VirtualNetworkCrud instance injected by FastAPI.\n\nReturns:\n    JSONResponse: A message indicating the success of the turn-on operation.\n\nResponses:\n    200: Successful request. Returns a message indicating the success of\n    the turn-on operation.","operationId":"turn_on_virtual_network_virtual_networks__virtual_network_id__turn_on_put","security":[{"OAuth2PasswordBearer":[]}],"parameters":[{"name":"virtual_network_id","in":"path","required":true,"schema":{"type":"string","title":"Virtual Network Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found!"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/virtual_networks/{virtual_network_id}/turn_off":{"put":{"tags":["virtual_network"],"summary":"Turn Off Virtual Network","description":"Turns off a virtual network identified by its ID.\n\nArgs:\n    virtual_network_id (str): The ID of the virtual network to be turned\n        off.\n    crud: VirtualNetworkCrud instance injected by FastAPI.\n\nReturns:\n    JSONResponse: A message indicating the success of the turn-off operation\n\nResponses:\n    200: Successful request. Returns a message indicating the success of\n    the turn-off operation.","operationId":"turn_off_virtual_network_virtual_networks__virtual_network_id__turn_off_put","security":[{"OAuth2PasswordBearer":[]}],"parameters":[{"name":"virtual_network_id","in":"path","required":true,"schema":{"type":"string","title":"Virtual Network Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found!"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/virtual_networks/{virtual_network_id}/add_port_group":{"post":{"tags":["virtual_network"],"summary":"Add Port Group","description":"Adds a port group to a virtual network.\n\nArgs:\n    virtual_network_id (str): The ID of the virtual network to which the\n        port group will be added.\n    port_group (schemas.PortGroup): The port group data to be added.\n    user_info: User information injected by FastAPI.\n    crud: VirtualNetworkCrud instance injected by FastAPI.\n\nReturns:\n    VirtualNetworkResponse: The virtual network with the added port group.\n\nResponses:\n    200: Successful request. Returns the virtual network with the added port\n    group.","operationId":"add_port_group_virtual_networks__virtual_network_id__add_port_group_post","security":[{"OAuth2PasswordBearer":[]}],"parameters":[{"name":"virtual_network_id","in":"path","required":true,"schema":{"type":"string","title":"Virtual Network Id"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PortGroup"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/VirtualNetworkResponse"}}}},"404":{"description":"Not found!"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/virtual_networks/{virtual_network_id}/delete_port_group":{"delete":{"tags":["virtual_network"],"summary":"Delete Port Group","description":"Deletes a port group from a virtual network.\n\nArgs:\n    virtual_network_id (str): The ID of the virtual network from which the\n        port group will be deleted.\n    port_group_name (str): The name of the port group to be deleted.\n    user_info: User information injected by FastAPI.\n    crud: VirtualNetworkCrud instance injected by FastAPI.\n\nReturns:\n    JSONResponse: A message indicating the success of the delete operation.\n\nResponses:\n    200: Successful request. Returns a message indicating the success of the\n    delete operation.","operationId":"delete_port_group_virtual_networks__virtual_network_id__delete_port_group_delete","security":[{"OAuth2PasswordBearer":[]}],"parameters":[{"name":"virtual_network_id","in":"path","required":true,"schema":{"type":"string","title":"Virtual Network Id"}},{"name":"port_group_name","in":"query","required":true,"schema":{"type":"string","title":"Port Group Name"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found!"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/virtual_networks/{virtual_network_id}/{port_group_name}/{trunk_id}/add_tag_id":{"post":{"tags":["virtual_network"],"summary":"Add Tag To Trunk Port Group","description":"Adds a tag to a trunk port group in a virtual network.\n\nArgs:\n    virtual_network_id (str): The ID of the virtual network.\n    port_group_name (str): The name of the port group.\n    tag_id (str): The tag ID to be added to the port group.\n    user_info: User information injected by FastAPI.\n    crud: VirtualNetworkCrud instance injected by FastAPI.\n\nReturns:\n    PortGroup: The updated port group with the added tag.\n\nResponses:\n    200: Successful request. Returns the updated port group.","operationId":"add_tag_to_trunk_port_group_virtual_networks__virtual_network_id___port_group_name___trunk_id__add_tag_id_post","security":[{"OAuth2PasswordBearer":[]}],"parameters":[{"name":"virtual_network_id","in":"path","required":true,"schema":{"type":"string","title":"Virtual Network Id"}},{"name":"port_group_name","in":"path","required":true,"schema":{"type":"string","title":"Port Group Name"}},{"name":"tag_id","in":"query","required":true,"schema":{"type":"string","title":"Tag Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PortGroup"}}}},"404":{"description":"Not found!"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/backup/":{"get":{"tags":["backup"],"summary":"Get Backups","description":"Retrieve a list of backup snapshots.\n\nThis endpoint fetches all available backup snapshots using the\n`BackupCrud` service.\n\nArgs:\n    crud (BackupCrud): Dependency injection of the `BackupCrud` service.\n\nDependencies:\n    - User authentication via `get_current_user`.\n\nReturns:\n    BaseResponse[List[ResticSnapshot]]: A response containing a list of\n    snapshot metadata.","operationId":"get_backups_backup__get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponse_List_ResticSnapshot__"}}}},"404":{"description":"Not found!"}},"security":[{"OAuth2PasswordBearer":[]}]},"post":{"tags":["backup"],"summary":"Create Backup","description":"Create a new backup.\n\nThis endpoint initiates a backup process using the `BackupCrud` service.\n\nArgs:\n    crud (BackupCrud): Dependency injection of the `BackupCrud` service.\n\nDependencies:\n    - User authentication via `get_current_user`.\n\nReturns:\n    BaseResponse[ResticBackupResult]: A response containing the result\n    of the backup operation.","operationId":"create_backup_backup__post","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponse_ResticBackupResult_"}}}},"404":{"description":"Not found!"}},"security":[{"OAuth2PasswordBearer":[]}]}},"/backup/restore":{"post":{"tags":["backup"],"summary":"Restore","description":"Restore data from a specific snapshot.\n\nThis endpoint restores data from a specified snapshot using the\n`BackupCrud` service. The snapshot ID can be specified in the query\nparameters, with a default value of \"latest\".\n\nArgs:\n    snapshot_id (str): ID of the snapshot to restore. Defaults to \"latest\".\n    crud (BackupCrud): Dependency injection of the `BackupCrud` service.\n\nDependencies:\n    - User authentication via `get_current_user`.\n\nReturns:\n    BaseResponse[ResticRestoreResult]: A response containing the result\n    of the restore operation.","operationId":"restore_backup_restore_post","security":[{"OAuth2PasswordBearer":[]}],"parameters":[{"name":"snapshot_id","in":"query","required":false,"schema":{"type":"string","description":"Snapshot ID to restore (default: 'latest')","default":"latest","title":"Snapshot Id"},"description":"Snapshot ID to restore (default: 'latest')"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponse_ResticRestoreResult_"}}}},"404":{"description":"Not found!"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/backup/repository":{"post":{"tags":["backup"],"summary":"Init Repository","description":"Initialize a backup repository.\n\nThis endpoint initializes the backup repository using the `BackupCrud`\nservice.\n\nArgs:\n    crud (BackupCrud): Dependency injection of the `BackupCrud` service.\n\nDependencies:\n    - User authentication via `get_current_user`.\n\nReturns:\n    BaseResponse: A response indicating the success of the operation.","operationId":"init_repository_backup_repository_post","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponse"}}}},"404":{"description":"Not found!"}}}},"/backup/{snapshot_id}":{"delete":{"tags":["backup"],"summary":"Delete Backup","description":"Delete a specific backup snapshot.\n\nThis endpoint removes a backup snapshot by calling the `BackupCrud`.\n\nArgs:\n    snapshot_id (str): ID of the snapshot to delete.\n    crud (BackupCrud): Dependency injection of the `BackupCrud`.\n\nDependencies:\n    - User authentication via `get_current_user`.\n\nReturns:\n    BaseResponse[ResticDeleteResult]: A response containing the result\n        of the deletion operation.","operationId":"delete_backup_backup__snapshot_id__delete","security":[{"OAuth2PasswordBearer":[]}],"parameters":[{"name":"snapshot_id","in":"path","required":true,"schema":{"type":"string","title":"Snapshot Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponse_ResticDeleteResult_"}}}},"404":{"description":"Not found!"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/templates/":{"get":{"tags":["templates"],"summary":"Get Templates","description":"Retrieve a paginated list of templates.\n\nArgs:\n    crud (TemplateCrud): Dependency-injected service for handling template\n        logic.\n    params (Params): Dependency-injected for pagination params\nReturns:\n    BaseResponse[Page[Template]]: Paginated response containing templates.","operationId":"get_templates_templates__get","security":[{"OAuth2PasswordBearer":[]}],"parameters":[{"name":"page","in":"query","required":false,"schema":{"type":"integer","minimum":1,"default":1,"title":"Page"}},{"name":"size","in":"query","required":false,"schema":{"type":"integer","maximum":100,"minimum":1,"default":50,"title":"Size"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponse_Page_TemplateResponse__"}}}},"404":{"description":"Not found!"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"post":{"tags":["templates"],"summary":"Create Template","description":"Create a new template.\n\nArgs:\n    data (CreateTemplate): Template creation payload.\n    crud (TemplateCrud): Dependency-injected service for handling template\n        logic.\n\nReturns:\n    BaseResponse[Template]: The created template.","operationId":"create_template_templates__post","security":[{"OAuth2PasswordBearer":[]}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/RequestCreateTemplate"}}}},"responses":{"201":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponse_TemplateResponse_"}}}},"404":{"description":"Not found!"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/templates/{template_id}":{"get":{"tags":["templates"],"summary":"Get Template","description":"Retrieve a specific template by its ID.\n\nArgs:\n    template_id (UUID): The ID of the template to retrieve.\n    crud (TemplateCrud): Dependency-injected service for handling template\n        logic.\n\nReturns:\n    BaseResponse[Template]: The retrieved template.","operationId":"get_template_templates__template_id__get","security":[{"OAuth2PasswordBearer":[]}],"parameters":[{"name":"template_id","in":"path","required":true,"schema":{"type":"string","format":"uuid","title":"Template Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponse_TemplateResponse_"}}}},"404":{"description":"Not found!"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"patch":{"tags":["templates"],"summary":"Edit Template","description":"Update an existing template.\n\nArgs:\n    template_id (UUID): The ID of the template to update.\n    data (EditTemplate): Fields to update in the template.\n    crud (TemplateCrud): Dependency-injected service for handling template\n        logic.\n\nReturns:\n    BaseResponse[Template]: The updated template.","operationId":"edit_template_templates__template_id__patch","security":[{"OAuth2PasswordBearer":[]}],"parameters":[{"name":"template_id","in":"path","required":true,"schema":{"type":"string","format":"uuid","title":"Template Id"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/RequestEditTemplate"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponse_TemplateResponse_"}}}},"404":{"description":"Not found!"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"delete":{"tags":["templates"],"summary":"Delete Template","description":"Delete a template by ID.\n\nArgs:\n    template_id (UUID): The ID of the template to delete.\n    crud (TemplateCrud): Dependency-injected service for handling template\n        logic.\n\nReturns:\n    BaseResponse[Template]: The deleted template.","operationId":"delete_template_templates__template_id__delete","security":[{"OAuth2PasswordBearer":[]}],"parameters":[{"name":"template_id","in":"path","required":true,"schema":{"type":"string","format":"uuid","title":"Template Id"}}],"responses":{"202":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResponse_TemplateResponse_"}}}},"404":{"description":"Not found!"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/":{"get":{"summary":"Root","description":"Serve the root endpoint.\n\nReturns the index.html template.\n\nArgs:\n    request (Request): The incoming HTTP request.\n\nReturns:\n    TemplateResponse: The rendered index.html template.","operationId":"root__get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}}},"components":{"schemas":{"AttachImageInfo":{"properties":{"path":{"type":"string","format":"path","title":"Path"},"size":{"type":"integer","title":"Size"},"provisioning":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Provisioning"}},"type":"object","required":["path","size"],"title":"AttachImageInfo","description":"Represents metadata for an attached image.\n\nThis schema includes information about an attached image, such as its\nfile path, size, and provisioning details.\n\nAttributes:\n    path (str): The file path of the attached image.\n    size (int): The size of the attached image in bytes.\n    provisioning (Optional[str]): The provisioning type or details\n    for the attached image."},"AttachVolumeInfo":{"properties":{"path":{"anyOf":[{"type":"string","format":"path"},{"type":"null"}],"title":"Path"},"size":{"type":"integer","title":"Size"},"provisioning":{"type":"string","title":"Provisioning"}},"type":"object","required":["size","provisioning"],"title":"AttachVolumeInfo","description":"Schema for returning information about an attached volume.\n\nAttributes:\n    path (Optional[str]): The path of the volume.\n    size (int): The size of the volume in bytes.\n    provisioning (str): The provisioning method of the volume."},"AutoCreateVolume":{"properties":{"name":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Name"},"emulation":{"type":"string","enum":["virtio","ide","scsi","sata"],"title":"Emulation","default":"virtio"},"format":{"type":"string","enum":["qcow2","raw"],"title":"Format","default":"qcow2"},"qos":{"$ref":"#/components/schemas/QOS"},"boot_order":{"type":"integer","title":"Boot Order"},"order":{"type":"integer","title":"Order"},"read_only":{"type":"boolean","title":"Read Only","default":false},"storage_id":{"type":"string","title":"Storage Id"},"size":{"type":"integer","title":"Size"}},"type":"object","required":["qos","boot_order","order","storage_id","size"],"title":"AutoCreateVolume","description":"Schema for automatically creating and attaching a new volume as a disk"},"BandWithData":{"properties":{"read":{"type":"number","title":"Read"},"write":{"type":"number","title":"Write"},"date":{"type":"integer","title":"Date"}},"type":"object","required":["read","write","date"],"title":"BandWithData","description":"Represents bandwidth usage data.\n\nAttributes:\n    read (float): The amount of data read in bandwidth usage.\n    write (float): The amount of data written in bandwidth usage.\n    date (int): The timestamp of the bandwidth usage data."},"BaseResponse":{"properties":{"status":{"type":"string","title":"Status","description":"Status of the response (\"success\" or \"error\")","examples":["success"]},"data":{"anyOf":[{},{"type":"null"}],"title":"Data","description":"Payload containing the response data (if any)"},"error":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Error","description":"Error message (if any)","examples":["Template not found"]}},"type":"object","required":["status"],"title":"BaseResponse","description":"Generic schema for API responses.\n\nThis schema is designed to standardize API responses by including\na status, optional data, and an optional error message.\n\nAttributes:\n    status (str): The status of the response (e.g., \"success\", \"error\").\n    data (Optional[T]): The data payload of the response, if applicable.\n    error (Optional[str]): An error message, if applicable."},"BaseResponse_List_ResticSnapshot__":{"properties":{"status":{"type":"string","title":"Status","description":"Status of the response (\"success\" or \"error\")","examples":["success"]},"data":{"anyOf":[{"items":{"$ref":"#/components/schemas/ResticSnapshot"},"type":"array"},{"type":"null"}],"title":"Data","description":"Payload containing the response data (if any)"},"error":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Error","description":"Error message (if any)","examples":["Template not found"]}},"type":"object","required":["status"],"title":"BaseResponse[List[ResticSnapshot]]"},"BaseResponse_Page_TemplateResponse__":{"properties":{"status":{"type":"string","title":"Status","description":"Status of the response (\"success\" or \"error\")","examples":["success"]},"data":{"anyOf":[{"$ref":"#/components/schemas/Page_TemplateResponse_"},{"type":"null"}],"description":"Payload containing the response data (if any)"},"error":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Error","description":"Error message (if any)","examples":["Template not found"]}},"type":"object","required":["status"],"title":"BaseResponse[Page[TemplateResponse]]"},"BaseResponse_ResticBackupResult_":{"properties":{"status":{"type":"string","title":"Status","description":"Status of the response (\"success\" or \"error\")","examples":["success"]},"data":{"anyOf":[{"$ref":"#/components/schemas/ResticBackupResult"},{"type":"null"}],"description":"Payload containing the response data (if any)"},"error":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Error","description":"Error message (if any)","examples":["Template not found"]}},"type":"object","required":["status"],"title":"BaseResponse[ResticBackupResult]"},"BaseResponse_ResticDeleteResult_":{"properties":{"status":{"type":"string","title":"Status","description":"Status of the response (\"success\" or \"error\")","examples":["success"]},"data":{"anyOf":[{"$ref":"#/components/schemas/ResticDeleteResult"},{"type":"null"}],"description":"Payload containing the response data (if any)"},"error":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Error","description":"Error message (if any)","examples":["Template not found"]}},"type":"object","required":["status"],"title":"BaseResponse[ResticDeleteResult]"},"BaseResponse_ResticRestoreResult_":{"properties":{"status":{"type":"string","title":"Status","description":"Status of the response (\"success\" or \"error\")","examples":["success"]},"data":{"anyOf":[{"$ref":"#/components/schemas/ResticRestoreResult"},{"type":"null"}],"description":"Payload containing the response data (if any)"},"error":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Error","description":"Error message (if any)","examples":["Template not found"]}},"type":"object","required":["status"],"title":"BaseResponse[ResticRestoreResult]"},"BaseResponse_TemplateResponse_":{"properties":{"status":{"type":"string","title":"Status","description":"Status of the response (\"success\" or \"error\")","examples":["success"]},"data":{"anyOf":[{"$ref":"#/components/schemas/TemplateResponse"},{"type":"null"}],"description":"Payload containing the response data (if any)"},"error":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Error","description":"Error message (if any)","examples":["Template not found"]}},"type":"object","required":["status"],"title":"BaseResponse[TemplateResponse]"},"Body_auth_auth__post":{"properties":{"grant_type":{"anyOf":[{"type":"string","pattern":"password"},{"type":"null"}],"title":"Grant Type"},"username":{"type":"string","title":"Username"},"password":{"type":"string","title":"Password"},"scope":{"type":"string","title":"Scope","default":""},"client_id":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Client Id"},"client_secret":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Client Secret"}},"type":"object","required":["username","password"],"title":"Body_auth_auth__post"},"Body_upload_image_images_upload__post":{"properties":{"image":{"type":"string","format":"binary","title":"Image","description":"Upload image."}},"type":"object","required":["image"],"title":"Body_upload_image_images_upload__post"},"BridgeCreate":{"properties":{"ip":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Ip"},"name":{"type":"string","title":"Name"},"type":{"type":"string","title":"Type"},"interfaces":{"items":{"$ref":"#/components/schemas/intakevms__modules__network__entrypoints__schemas__Interface"},"type":"array","title":"Interfaces"},"status":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Status"}},"type":"object","required":["name","type","interfaces"],"title":"BridgeCreate","description":"Schema for creating a new bridge.\n\nAttributes:\n    ip (Optional[str]): The IP address of the bridge.\n    name (str): The name of the bridge.\n    type (str): The type of the bridge (e.g., OVS, Linux bridge).\n    interfaces (List[Interface]): The list of interfaces associated with\n        the bridge.\n    status (Optional[str]): The status of the bridge."},"BridgeCreateResponse":{"properties":{"id":{"type":"string","title":"Id"},"ip":{"type":"string","title":"Ip"},"name":{"type":"string","title":"Name"},"gateway":{"type":"string","title":"Gateway"},"power_state":{"type":"string","title":"Power State"},"mac":{"type":"string","title":"Mac"},"netmask":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Netmask"},"inf_type":{"type":"string","title":"Inf Type"},"status":{"type":"string","title":"Status"},"interface_extra_specs":{"$ref":"#/components/schemas/InterfaceExtraSpecs"}},"type":"object","required":["id","ip","name","gateway","power_state","mac","inf_type","status","interface_extra_specs"],"title":"BridgeCreateResponse","description":"Schema for the response after creating a bridge.\n\nAttributes:\n    id (str): The unique identifier of the bridge.\n    ip (str): The IP address of the bridge.\n    name (str): The name of the bridge.\n    gateway (str): The gateway IP address of the bridge.\n    power_state (str): The power state of the bridge.\n    mac (str): The MAC address of the bridge.\n    netmask (Optional[int]): The netmask of the bridge.\n    inf_type (str): The type of the bridge.\n    status (str): The status of the bridge.\n    interface_extra_specs (InterfaceExtraSpecs): Additional specifications\n        for the bridge's interface."},"CSVResponse":{"properties":{"filename":{"type":"string","title":"Filename"},"content_type":{"type":"string","title":"Content Type"},"content":{"items":{"$ref":"#/components/schemas/Event"},"type":"array","title":"Content"}},"type":"object","required":["filename","content_type","content"],"title":"CSVResponse","description":"Pydantic model representing a CSV file response.\n\nAttributes:\n    filename (str): The name of the CSV file.\n    content_type (str): The content type of the file, typically 'text/csv'.\n    content (List[Event]): A list of events to be included in the CSV file."},"CloneVm":{"properties":{"count":{"type":"integer","title":"Count","description":"Number of clones","default":1},"target_storage_id":{"type":"string","format":"uuid","title":"Target Storage Id","description":"ID of storage where the volume will be created"}},"type":"object","required":["target_storage_id"],"title":"CloneVm","description":"Schema for cloning a virtual machine."},"Cpu":{"properties":{"cores":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Cores","default":1},"threads":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Threads","default":1},"sockets":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Sockets","default":1},"model":{"type":"string","enum":["host"],"const":"host","title":"Model","default":"host"},"type":{"type":"string","enum":["static","dynamic"],"title":"Type","default":"static"},"vcpu":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Vcpu"}},"type":"object","title":"Cpu","description":"Schema for CPU information."},"CpuData":{"properties":{"count":{"type":"integer","title":"Count"},"percentage":{"type":"number","title":"Percentage"}},"type":"object","required":["count","percentage"],"title":"CpuData","description":"Represents CPU usage data.\n\nAttributes:\n    count (int): The number of CPU cores.\n    percentage (float): The percentage of CPU usage."},"CreateLocalPartition":{"properties":{"local_disk_path":{"type":"string","format":"path","title":"Local Disk Path"},"storage_type":{"type":"string","enum":["local_partition"],"const":"local_partition","title":"Storage Type"},"size_value":{"type":"integer","title":"Size Value"},"size_unit":{"type":"string","enum":["B"],"const":"B","title":"Size Unit"}},"type":"object","required":["local_disk_path","storage_type","size_value","size_unit"],"title":"CreateLocalPartition","description":"Schema for creating a local disk partition.\n\nAttributes:\n    local_disk_path (str): The path to the local disk.\n    storage_type (Literal['local_partition']): The type of storage.\n    size_value (int): The size of the partition in bytes.\n    size_unit (Literal['B']): The unit of the partition size\n        (default is 'B')."},"CreateSnapshot":{"properties":{"name":{"type":"string","title":"Name"},"description":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Description"}},"type":"object","required":["name"],"title":"CreateSnapshot","description":"Schema for creating a snapshot of the virtual machine.\n\nAttributes:\n    name (str): The name of the new snapshot.\n    description (Optional[str]): The optional description of the snapshot."},"CreateStorage":{"properties":{"name":{"type":"string","maxLength":60,"minLength":1,"title":"Name"},"description":{"type":"string","maxLength":255,"title":"Description"},"storage_type":{"type":"string","enum":["nfs","localfs"],"title":"Storage Type"},"specs":{"anyOf":[{"$ref":"#/components/schemas/NfsStorageExtraSpecsCreate"},{"$ref":"#/components/schemas/LocalFSStorageExtraSpecsCreate"}],"title":"Specs"}},"additionalProperties":false,"type":"object","required":["name","description","storage_type","specs"],"title":"CreateStorage","description":"Schema for creating a new storage.\n\nAttributes:\n    name (str): The name of the storage.\n    description (str): A brief description of the storage.\n    storage_type (Literal['nfs', 'localfs']): The type of storage.\n    specs (Union[\n            NfsStorageExtraSpecsCreate,\n            LocalFSStorageExtraSpecsCreate]): Specifications for the\n                storage."},"CreateVirtualMachine":{"properties":{"name":{"type":"string","title":"Name"},"description":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Description"},"os":{"$ref":"#/components/schemas/Os"},"cpu":{"$ref":"#/components/schemas/Cpu"},"ram":{"$ref":"#/components/schemas/RAM"},"graphic_interface":{"$ref":"#/components/schemas/GraphicInterfaceBase"},"disks":{"$ref":"#/components/schemas/CreateVmDisks"},"virtual_interfaces":{"items":{"$ref":"#/components/schemas/VirtualInterface"},"type":"array","title":"Virtual Interfaces"}},"type":"object","required":["name","os","cpu","ram","graphic_interface","disks","virtual_interfaces"],"title":"CreateVirtualMachine","description":"Schema for creating a virtual machine."},"CreateVmDisks":{"properties":{"attach_disks":{"items":{"anyOf":[{"$ref":"#/components/schemas/intakevms__modules__virtual_machines__entrypoints__schemas__AttachVolume"},{"$ref":"#/components/schemas/intakevms__modules__virtual_machines__entrypoints__schemas__AttachImage"},{"$ref":"#/components/schemas/AutoCreateVolume"},{"type":"null"}]},"type":"array","title":"Attach Disks"}},"type":"object","required":["attach_disks"],"title":"CreateVmDisks","description":"Schema for creating virtual machine disks."},"CreateVolume":{"properties":{"name":{"type":"string","maxLength":40,"minLength":1,"title":"Name"},"description":{"type":"string","maxLength":255,"title":"Description"},"storage_id":{"type":"string","format":"uuid","title":"Storage Id"},"format":{"type":"string","enum":["qcow2","raw"],"title":"Format"},"size":{"type":"integer","minimum":1.0,"title":"Size","default":0},"read_only":{"anyOf":[{"type":"boolean"},{"type":"null"}],"title":"Read Only","default":false}},"type":"object","required":["name","description","storage_id","format"],"title":"CreateVolume","description":"Schema for creating a new volume.\n\nAttributes:\n    name (str): The name of the volume.\n    description (str): A description of the volume.\n    storage_id (UUID): The ID of the storage to create the volume in.\n    format (Literal['qcow2', 'raw']): The format of the volume.\n    size (int): The size of the volume in bytes.\n    read_only (Optional[bool]): Whether the volume is read-only."},"CreateVolumeFromTemplate":{"properties":{"name":{"type":"string","maxLength":40,"minLength":1,"title":"Name"},"description":{"type":"string","maxLength":255,"title":"Description"},"storage_id":{"type":"string","format":"uuid","title":"Storage Id"},"template_id":{"type":"string","format":"uuid","title":"Template Id"},"read_only":{"anyOf":[{"type":"boolean"},{"type":"null"}],"title":"Read Only","default":false}},"type":"object","required":["name","description","storage_id","template_id"],"title":"CreateVolumeFromTemplate"},"DeleteLocalPartition":{"properties":{"storage_type":{"type":"string","enum":["local_partition"],"const":"local_partition","title":"Storage Type"},"local_disk_path":{"type":"string","format":"path","title":"Local Disk Path"},"partition_number":{"type":"string","title":"Partition Number"}},"type":"object","required":["storage_type","local_disk_path","partition_number"],"title":"DeleteLocalPartition","description":"Schema for deleting a local disk partition.\n\nAttributes:\n    storage_type (Literal['local_partition']): The type of storage.\n    local_disk_path (str): The path to the local disk.\n    partition_number (str): The number of the partition to delete."},"DetachDisk":{"properties":{"id":{"type":"integer","title":"Id"}},"type":"object","required":["id"],"title":"DetachDisk","description":"Schema for detaching a disk."},"DetachImage":{"properties":{"vm_id":{"type":"string","format":"uuid","title":"Vm Id"}},"type":"object","required":["vm_id"],"title":"DetachImage","description":"Represents the data required to detach an image from a virtual machine.\n\nThis schema validates the data provided for detaching an image from a VM.\n\nAttributes:\n    vm_id (UUID): The ID of the virtual machine from which the image will be\n        detached.\n\nMethods:\n    _normalize_id: Validates and normalizes the VM ID."},"DetachVirtualInterface":{"properties":{"id":{"type":"integer","title":"Id"}},"type":"object","required":["id"],"title":"DetachVirtualInterface","description":"Schema for detaching a virtual network interface."},"DetachVolume":{"properties":{"vm_id":{"type":"string","format":"uuid","title":"Vm Id"}},"type":"object","required":["vm_id"],"title":"DetachVolume","description":"Schema for detaching a volume from a virtual machine.\n\nAttributes:\n    vm_id (UUID): The ID of the virtual machine."},"DownloadResponse":{"properties":{"file":{"$ref":"#/components/schemas/CSVResponse"}},"type":"object","required":["file"],"title":"DownloadResponse","description":"Pydantic model representing a download response containing a CSV file.\n\nAttributes:\n    file (CSVResponse): The CSV file response containing event data."},"EditDisk":{"properties":{"name":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Name"},"emulation":{"type":"string","enum":["virtio","ide","scsi","sata"],"title":"Emulation","default":"virtio"},"format":{"type":"string","enum":["qcow2","raw"],"title":"Format","default":"qcow2"},"qos":{"$ref":"#/components/schemas/QOS"},"boot_order":{"type":"integer","title":"Boot Order"},"order":{"type":"integer","title":"Order"},"read_only":{"type":"boolean","title":"Read Only","default":false},"id":{"type":"integer","title":"Id"}},"type":"object","required":["qos","boot_order","order","id"],"title":"EditDisk","description":"Schema for editing disk information."},"EditVirtualInterface":{"properties":{"mode":{"type":"string","enum":["bridge","nat","default","isolated","vepa","user","virtual_network"],"title":"Mode","default":"bridge"},"portgroup":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Portgroup"},"interface":{"type":"string","title":"Interface"},"mac":{"type":"string","title":"Mac","default":"6C:4A:74:B4:FD:59"},"model":{"type":"string","enum":["virtio","bridge"],"title":"Model","default":"virtio"},"order":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Order"},"id":{"type":"integer","title":"Id"}},"type":"object","required":["interface","id"],"title":"EditVirtualInterface","description":"Schema for editing a virtual network interface."},"EditVirtualInterfaces":{"properties":{"new_virtual_interfaces":{"items":{"anyOf":[{"$ref":"#/components/schemas/VirtualInterface"},{"type":"null"}]},"type":"array","title":"New Virtual Interfaces"},"detach_virtual_interfaces":{"items":{"anyOf":[{"$ref":"#/components/schemas/DetachVirtualInterface"},{"type":"null"}]},"type":"array","title":"Detach Virtual Interfaces"},"edit_virtual_interfaces":{"items":{"anyOf":[{"$ref":"#/components/schemas/EditVirtualInterface"},{"type":"null"}]},"type":"array","title":"Edit Virtual Interfaces"}},"type":"object","required":["new_virtual_interfaces","detach_virtual_interfaces","edit_virtual_interfaces"],"title":"EditVirtualInterfaces","description":"Schema for editing virtual machine interfaces."},"EditVm":{"properties":{"name":{"type":"string","title":"Name"},"description":{"type":"string","title":"Description"},"cpu":{"$ref":"#/components/schemas/Cpu"},"ram":{"$ref":"#/components/schemas/RAM"},"os":{"$ref":"#/components/schemas/Os"},"graphic_interface":{"$ref":"#/components/schemas/GraphicInterfaceBase"},"disks":{"$ref":"#/components/schemas/EditVmDisks"},"virtual_interfaces":{"$ref":"#/components/schemas/EditVirtualInterfaces"}},"type":"object","required":["name","description","cpu","ram","os","graphic_interface","disks","virtual_interfaces"],"title":"EditVm","description":"Schema for editing a virtual machine."},"EditVmDisks":{"properties":{"attach_disks":{"items":{"anyOf":[{"$ref":"#/components/schemas/intakevms__modules__virtual_machines__entrypoints__schemas__AttachVolume"},{"$ref":"#/components/schemas/intakevms__modules__virtual_machines__entrypoints__schemas__AttachImage"},{"$ref":"#/components/schemas/AutoCreateVolume"},{"type":"null"}]},"type":"array","title":"Attach Disks"},"detach_disks":{"items":{"anyOf":[{"$ref":"#/components/schemas/DetachDisk"},{"type":"null"}]},"type":"array","title":"Detach Disks"},"edit_disks":{"items":{"anyOf":[{"$ref":"#/components/schemas/EditDisk"},{"type":"null"}]},"type":"array","title":"Edit Disks"}},"type":"object","required":["attach_disks","detach_disks","edit_disks"],"title":"EditVmDisks","description":"Schema for editing virtual machine disks."},"EditVolume":{"properties":{"name":{"type":"string","maxLength":40,"minLength":1,"title":"Name"},"description":{"type":"string","maxLength":255,"title":"Description"},"read_only":{"anyOf":[{"type":"boolean"},{"type":"null"}],"title":"Read Only","default":false}},"type":"object","required":["name","description"],"title":"EditVolume","description":"Schema for editing a volume's metadata.\n\nAttributes:\n    name (str): The new name of the volume.\n    description (str): The new description of the volume.\n    read_only (Optional[bool]): Whether the volume is read-only."},"ErrorResponseModel":{"properties":{"details":{"type":"string","title":"Details"}},"type":"object","required":["details"],"title":"ErrorResponseModel","description":"Represents an error response.\n\nAttributes:\n    details (str): Details of the error."},"Event":{"properties":{"id":{"type":"integer","title":"Id"},"module":{"type":"string","title":"Module"},"object_id":{"type":"string","title":"Object Id"},"user_id":{"type":"string","title":"User Id"},"event":{"type":"string","title":"Event"},"timestamp":{"type":"integer","title":"Timestamp"},"information":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Information"}},"type":"object","required":["id","module","object_id","user_id","event","timestamp"],"title":"Event","description":"Pydantic model representing an event.\n\nAttributes:\n    id (int): Unique identifier of the event.\n    module (str): Name of the module where the event originated.\n    object_id (str): ID of the related object.\n    user_id (str): ID of the user who created the event.\n    event (str): Description of the event.\n    timestamp (int): Timestamp of the event occurrence.\n    information (Optional[str]): Additional information about the event."},"ExtendVolume":{"properties":{"new_size":{"type":"integer","minimum":1.0,"title":"New Size","default":0}},"type":"object","title":"ExtendVolume","description":"Schema for extending an existing volume.\n\nAttributes:\n    new_size (int): The new size of the volume in bytes."},"GraphicInterfaceBase":{"properties":{"login":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Login"},"password":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Password"},"connect_type":{"type":"string","enum":["vnc","spice"],"title":"Connect Type","default":"vnc"}},"type":"object","title":"GraphicInterfaceBase","description":"Base schema for graphic interface information."},"GraphicInterfaceInfo":{"properties":{"login":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Login"},"password":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Password"},"connect_type":{"type":"string","enum":["vnc","spice"],"title":"Connect Type","default":"vnc"},"url":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Url"}},"type":"object","title":"GraphicInterfaceInfo","description":"Schema for detailed graphic interface information."},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"IOLatency":{"properties":{"wait":{"type":"number","title":"Wait"},"date":{"type":"integer","title":"Date"}},"type":"object","required":["wait","date"],"title":"IOLatency","description":"Represents IO latency data.\n\nAttributes:\n    wait (float): The wait time for IO operations.\n    date (int): The timestamp of the IO latency data."},"IQN":{"properties":{"iqn":{"type":"string","title":"Iqn"}},"type":"object","required":["iqn"],"title":"IQN","description":"Represents an IQN (iSCSI Qualified Name).\n\nAttributes:\n    iqn (str): The IQN."},"Image":{"properties":{"id":{"type":"string","format":"uuid","title":"Id"},"name":{"type":"string","title":"Name"},"size":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Size"},"path":{"type":"string","format":"path","title":"Path"},"status":{"type":"string","title":"Status"},"information":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Information"},"description":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Description"},"storage_id":{"type":"string","format":"uuid","title":"Storage Id"},"user_id":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"User Id"},"attachments":{"items":{"$ref":"#/components/schemas/intakevms__modules__image__entrypoints__schemas__Attachment"},"type":"array","title":"Attachments","default":[]}},"type":"object","required":["id","name","path","status","storage_id"],"title":"Image","description":"Represents metadata of an image.\n\nThis schema includes details about an image, such as its name, size,\nstorage location, and associated attachments.\n\nAttributes:\n    id (UUID): The unique identifier of the image.\n    name (str): The name of the image.\n    size (Optional[int]): The size of the image in bytes.\n    path (str): The file path of the image.\n    status (str): The current status of the image (e.g., active, inactive).\n    information (Optional[str]): Additional information about the image.\n    description (Optional[str]): A description of the image.\n    storage_id (UUID): The ID of the storage where the image is located.\n    user_id (Optional[str]): The ID of the user who owns the image.\n    attachments (List[Attachment]): A list of attachments for this image."},"Interface-Output":{"properties":{"id":{"type":"string","title":"Id"},"name":{"type":"string","title":"Name"},"mac":{"type":"string","title":"Mac"},"ip":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Ip"},"netmask":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Netmask"},"inf_type":{"type":"string","title":"Inf Type"},"power_state":{"type":"string","title":"Power State"},"status":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Status"},"mtu":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Mtu"},"speed":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Speed"},"interface_extra_specs":{"anyOf":[{"$ref":"#/components/schemas/InterfaceExtraSpecs"},{"type":"null"}]}},"type":"object","required":["id","name","mac","inf_type","power_state"],"title":"Interface","description":"Schema representing a network interface.\n\nAttributes:\n    id (str): The unique identifier of the interface.\n    name (str): The name of the interface.\n    mac (str): The MAC address of the interface.\n    ip (Optional[str]): The IP address of the interface.\n    netmask (Optional[int]): The netmask of the interface.\n    inf_type (str): The type of the interface (e.g., physical, virtual).\n    power_state (str): The power state of the interface (e.g., on, off).\n    status (Optional[str]): The status of the interface.\n    mtu (Optional[int]): The Maximum Transmission Unit size.\n    speed (Optional[int]): The speed of the interface.\n    interface_extra_specs (Optional[InterfaceExtraSpecs]): Additional\n        specifications for the interface."},"InterfaceDeleted":{"properties":{"inf_type":{"type":"string","title":"Inf Type"},"ip":{"type":"string","title":"Ip"}},"type":"object","required":["inf_type","ip"],"title":"InterfaceDeleted","description":"Represents a block device interface that has been deleted.\n\nAttributes:\n    inf_type (str): The type of the block device interface.\n    ip (str): The IP address of the block device interface."},"InterfaceExtraSpecs":{"properties":{"slot_port":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Slot Port"},"duplex":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Duplex"}},"type":"object","title":"InterfaceExtraSpecs","description":"Additional specifications for network interfaces.\n\nAttributes:\n    slot_port (Optional[str]): The slot and port information.\n    duplex (Optional[str]): The duplex mode of the interface."},"InterfaceLogin":{"properties":{"inf_type":{"type":"string","title":"Inf Type"},"ip":{"type":"string","title":"Ip"},"port":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Port"},"id":{"type":"string","title":"Id"},"status":{"type":"string","title":"Status"}},"type":"object","required":["inf_type","ip","id","status"],"title":"InterfaceLogin","description":"Represents a block device interface with login status.\n\nAttributes:\n    id (str): The ID of the block device interface.\n    status (str): The login status of the block device interface."},"IopsData":{"properties":{"input":{"type":"integer","title":"Input"},"output":{"type":"integer","title":"Output"},"date":{"type":"integer","title":"Date"}},"type":"object","required":["input","output","date"],"title":"IopsData","description":"Represents IOPS (Input/Output Operations Per Second) data.\n\nAttributes:\n    input (int): The number of input operations.\n    output (int): The number of output operations.\n    date (int): The timestamp of the IOPS data."},"ListOfLocalDisks":{"properties":{"disks":{"items":{"anyOf":[{"$ref":"#/components/schemas/LocalDisk"},{"type":"null"}]},"type":"array","title":"Disks"}},"type":"object","required":["disks"],"title":"ListOfLocalDisks","description":"Schema representing a list of local disks.\n\nAttributes:\n    disks (List[Optional[LocalDisk]]): A list of local disks."},"ListOfSnapshots":{"properties":{"snapshots":{"items":{"anyOf":[{"$ref":"#/components/schemas/SnapshotInfo"},{"type":"null"}]},"type":"array","title":"Snapshots"}},"type":"object","required":["snapshots"],"title":"ListOfSnapshots","description":"Schema for a list of snapshots of specific virtual machine.\n\nAttributes:\n    snapshots(List[Optional[SnapshotInfo]]): The list of snapshots."},"ListOfVirtualNetworksResponse":{"properties":{"virtual_networks":{"items":{"$ref":"#/components/schemas/VirtualNetworkResponse"},"type":"array","title":"Virtual Networks"}},"type":"object","required":["virtual_networks"],"title":"ListOfVirtualNetworksResponse","description":"Represents a response containing a list of virtual networks.\n\nAttributes:\n    virtual_networks (List[VirtualNetworkResponse]): List of virtual\n        networks."},"LocalDisk":{"properties":{"path":{"type":"string","format":"path","title":"Path"},"size":{"type":"integer","title":"Size"},"mountpoint":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Mountpoint"},"fs_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Fs Uuid"},"type":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Type"},"fstype":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Fstype"},"parent":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Parent"}},"type":"object","required":["path","size"],"title":"LocalDisk","description":"Schema representing a local disk entity.\n\nAttributes:\n    path (str): The path to the local disk.\n    size (int): The size of the local disk in bytes.\n    mountpoint (Optional[str]): The mount point of the local disk.\n    fs_uuid (Optional[str]): The file system UUID of the local disk.\n    type (Optional[str]): The type of the local disk.\n    fstype (Optional[str]): The file system type of the local disk.\n    parent (Optional[str]): The parent disk, if applicable."},"LocalFSStorageExtraSpecsCreate":{"properties":{"path":{"type":"string","minLength":1,"format":"path","title":"Path"},"fs_type":{"type":"string","enum":["xfs","ext4"],"title":"Fs Type"}},"type":"object","required":["path","fs_type"],"title":"LocalFSStorageExtraSpecsCreate","description":"Schema for creating local file system storage specifications.\n\nAttributes:\n    path (str): The path to the local storage.\n    fs_type (Literal['xfs', 'ext4']): The file system type."},"LocalFSStorageExtraSpecsInfo":{"properties":{"path":{"type":"string","minLength":1,"format":"path","title":"Path"},"fs_type":{"type":"string","enum":["xfs","ext4"],"title":"Fs Type"},"mount_point":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Mount Point"}},"type":"object","required":["path","fs_type"],"title":"LocalFSStorageExtraSpecsInfo","description":"Schema for retrieving local file system storage specifications.\n\nAttributes:\n    mount_point (Optional[str]): The mount point of the local storage."},"MemoryData":{"properties":{"value":{"type":"integer","title":"Value"},"used":{"type":"integer","title":"Used"},"available":{"type":"integer","title":"Available"},"percentage":{"type":"number","title":"Percentage"}},"type":"object","required":["value","used","available","percentage"],"title":"MemoryData","description":"Represents memory usage data.\n\nAttributes:\n    value (int): The total memory value.\n    used (int): The amount of used memory.\n    available (int): The amount of available memory.\n    percentage (float): The percentage of memory usage."},"NfsStorageExtraSpecsCreate":{"properties":{"ip":{"type":"string","format":"ipv4","title":"Ip"},"path":{"type":"string","minLength":1,"format":"path","title":"Path"},"mount_version":{"type":"string","enum":["3","4"],"title":"Mount Version","default":"4"}},"type":"object","required":["ip","path"],"title":"NfsStorageExtraSpecsCreate","description":"Schema for creating NFS storage specifications.\n\nAttributes:\n    ip (str): The IP address of the NFS server.\n    path (str): The path to the NFS share on the server.\n    mount_version (Optional[str]): The NFS mount version (default is '4')."},"NfsStorageExtraSpecsInfo":{"properties":{"ip":{"type":"string","format":"ipv4","title":"Ip"},"path":{"type":"string","minLength":1,"format":"path","title":"Path"},"mount_version":{"type":"string","enum":["3","4"],"title":"Mount Version","default":"4"},"mount_point":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Mount Point"}},"type":"object","required":["ip","path"],"title":"NfsStorageExtraSpecsInfo","description":"Schema for retrieving NFS storage specifications.\n\nAttributes:\n    mount_point (Optional[str]): The mount point of the NFS share."},"NodeInfo":{"properties":{"cpu":{"$ref":"#/components/schemas/CpuData"},"memory":{"$ref":"#/components/schemas/MemoryData"},"storage":{"$ref":"#/components/schemas/StoragesData"},"iops":{"$ref":"#/components/schemas/IopsData"},"io_latency":{"$ref":"#/components/schemas/IOLatency"},"bandwidth_data":{"$ref":"#/components/schemas/BandWithData"},"disk_data":{"$ref":"#/components/schemas/intakevms__modules__dashboard__entrypoints__schemas__DiskInfo"}},"type":"object","required":["cpu","memory","storage","iops","io_latency","bandwidth_data","disk_data"],"title":"NodeInfo","description":"Aggregates node metrics into a comprehensive representation.\n\nAttributes:\n    cpu (CpuData): CPU usage data.\n    memory (MemoryData): Memory usage data.\n    storage (StoragesData): Storage usage data.\n    iops (IopsData): IOPS data.\n    io_latency (IOLatency): IO latency data.\n    bandwidth_data (BandWithData): Bandwidth usage data.\n    disk_data (DiskInfo): Disk read/write data."},"Notification":{"properties":{"msg_type":{"type":"string","title":"Msg Type"},"recipients":{"anyOf":[{"items":{"type":"string","format":"email"},"type":"array"},{"type":"null"}],"title":"Recipients"},"subject":{"type":"string","title":"Subject"},"message":{"type":"string","title":"Message"}},"type":"object","required":["msg_type","subject","message"],"title":"Notification","description":"Schema for notification data.\n\nThis schema defines the structure and validation rules for notification\ndata sent to and received from the API."},"Os":{"properties":{"os_type":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Os Type","default":"Linux"},"os_variant":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Os Variant","default":"Ubuntu 20.04"},"boot_device":{"type":"string","enum":["hd","cdrom"],"title":"Boot Device","default":"cdrom"},"bios":{"type":"string","enum":["LEGACY","UEFI","ACCORD"],"title":"Bios","default":"LEGACY"},"graphic_driver":{"type":"string","enum":["virtio","vga"],"title":"Graphic Driver","default":"virtio"}},"type":"object","title":"Os","description":"Schema for operating system information."},"Page_Event_":{"properties":{"items":{"items":{"$ref":"#/components/schemas/Event"},"type":"array","title":"Items"},"total":{"anyOf":[{"type":"integer","minimum":0.0},{"type":"null"}],"title":"Total"},"page":{"anyOf":[{"type":"integer","minimum":1.0},{"type":"null"}],"title":"Page"},"size":{"anyOf":[{"type":"integer","minimum":1.0},{"type":"null"}],"title":"Size"},"pages":{"anyOf":[{"type":"integer","minimum":0.0},{"type":"null"}],"title":"Pages"}},"type":"object","required":["items","total","page","size"],"title":"Page[Event]"},"Page_Image_":{"properties":{"items":{"items":{"$ref":"#/components/schemas/Image"},"type":"array","title":"Items"},"total":{"anyOf":[{"type":"integer","minimum":0.0},{"type":"null"}],"title":"Total"},"page":{"anyOf":[{"type":"integer","minimum":1.0},{"type":"null"}],"title":"Page"},"size":{"anyOf":[{"type":"integer","minimum":1.0},{"type":"null"}],"title":"Size"},"pages":{"anyOf":[{"type":"integer","minimum":0.0},{"type":"null"}],"title":"Pages"}},"type":"object","required":["items","total","page","size"],"title":"Page[Image]"},"Page_Interface_":{"properties":{"items":{"items":{"$ref":"#/components/schemas/Interface-Output"},"type":"array","title":"Items"},"total":{"anyOf":[{"type":"integer","minimum":0.0},{"type":"null"}],"title":"Total"},"page":{"anyOf":[{"type":"integer","minimum":1.0},{"type":"null"}],"title":"Page"},"size":{"anyOf":[{"type":"integer","minimum":1.0},{"type":"null"}],"title":"Size"},"pages":{"anyOf":[{"type":"integer","minimum":0.0},{"type":"null"}],"title":"Pages"}},"type":"object","required":["items","total","page","size"],"title":"Page[Interface]"},"Page_Storage_":{"properties":{"items":{"items":{"$ref":"#/components/schemas/Storage"},"type":"array","title":"Items"},"total":{"anyOf":[{"type":"integer","minimum":0.0},{"type":"null"}],"title":"Total"},"page":{"anyOf":[{"type":"integer","minimum":1.0},{"type":"null"}],"title":"Page"},"size":{"anyOf":[{"type":"integer","minimum":1.0},{"type":"null"}],"title":"Size"},"pages":{"anyOf":[{"type":"integer","minimum":0.0},{"type":"null"}],"title":"Pages"}},"type":"object","required":["items","total","page","size"],"title":"Page[Storage]"},"Page_TemplateResponse_":{"properties":{"items":{"items":{"$ref":"#/components/schemas/TemplateResponse"},"type":"array","title":"Items"},"total":{"anyOf":[{"type":"integer","minimum":0.0},{"type":"null"}],"title":"Total"},"page":{"anyOf":[{"type":"integer","minimum":1.0},{"type":"null"}],"title":"Page"},"size":{"anyOf":[{"type":"integer","minimum":1.0},{"type":"null"}],"title":"Size"},"pages":{"anyOf":[{"type":"integer","minimum":0.0},{"type":"null"}],"title":"Pages"}},"type":"object","required":["items","total","page","size"],"title":"Page[TemplateResponse]"},"Page_User_":{"properties":{"items":{"items":{"$ref":"#/components/schemas/User"},"type":"array","title":"Items"},"total":{"anyOf":[{"type":"integer","minimum":0.0},{"type":"null"}],"title":"Total"},"page":{"anyOf":[{"type":"integer","minimum":1.0},{"type":"null"}],"title":"Page"},"size":{"anyOf":[{"type":"integer","minimum":1.0},{"type":"null"}],"title":"Size"},"pages":{"anyOf":[{"type":"integer","minimum":0.0},{"type":"null"}],"title":"Pages"}},"type":"object","required":["items","total","page","size"],"title":"Page[User]"},"Page_VirtualMachineInfo_":{"properties":{"items":{"items":{"$ref":"#/components/schemas/VirtualMachineInfo"},"type":"array","title":"Items"},"total":{"anyOf":[{"type":"integer","minimum":0.0},{"type":"null"}],"title":"Total"},"page":{"anyOf":[{"type":"integer","minimum":1.0},{"type":"null"}],"title":"Page"},"size":{"anyOf":[{"type":"integer","minimum":1.0},{"type":"null"}],"title":"Size"},"pages":{"anyOf":[{"type":"integer","minimum":0.0},{"type":"null"}],"title":"Pages"}},"type":"object","required":["items","total","page","size"],"title":"Page[VirtualMachineInfo]"},"Page_Volume_":{"properties":{"items":{"items":{"$ref":"#/components/schemas/Volume"},"type":"array","title":"Items"},"total":{"anyOf":[{"type":"integer","minimum":0.0},{"type":"null"}],"title":"Total"},"page":{"anyOf":[{"type":"integer","minimum":1.0},{"type":"null"}],"title":"Page"},"size":{"anyOf":[{"type":"integer","minimum":1.0},{"type":"null"}],"title":"Size"},"pages":{"anyOf":[{"type":"integer","minimum":0.0},{"type":"null"}],"title":"Pages"}},"type":"object","required":["items","total","page","size"],"title":"Page[Volume]"},"PortGroup":{"properties":{"port_group_name":{"type":"string","title":"Port Group Name","default":"trunk_port_group"},"is_trunk":{"type":"string","enum":["yes","no"],"title":"Is Trunk"},"tags":{"items":{"anyOf":[{"type":"integer"},{"type":"string"}]},"type":"array","title":"Tags","examples":[["10","20","30","40"]]}},"type":"object","required":["is_trunk","tags"],"title":"PortGroup","description":"Represents a port group configuration.\n\nAttributes:\n    port_group_name (str): The name of the port group.\n    is_trunk (str): Indicates if the port group is a trunk ('yes' or 'no').\n    tags (List[str]): List of VLAN tags associated with the port group."},"QOS":{"properties":{"iops_read":{"type":"integer","title":"Iops Read","default":500},"iops_write":{"type":"integer","title":"Iops Write","default":500},"mb_read":{"type":"integer","title":"Mb Read","default":150},"mb_write":{"type":"integer","title":"Mb Write","default":150}},"type":"object","title":"QOS","description":"Schema for Quality of Service settings for disks."},"RAM":{"properties":{"size":{"type":"integer","title":"Size"}},"type":"object","required":["size"],"title":"RAM","description":"Schema for RAM information."},"RequestCreateTemplate":{"properties":{"name":{"type":"string","maxLength":40,"minLength":1,"title":"Name","description":"Name for the new template","examples":["ubuntu-template"]},"description":{"anyOf":[{"type":"string","maxLength":255},{"type":"null"}],"title":"Description","description":"Optional description for the template","examples":["Template for Ubuntu server deployments"]},"storage_id":{"type":"string","format":"uuid","title":"Storage Id","description":"ID of the storage where the template will be stored","examples":["c2f7b67e-92a3-41ea-b760-ef7785ebfcb9"]},"base_volume_id":{"type":"string","format":"uuid","title":"Base Volume Id","description":"ID of the base volume from which the template will be created","examples":["6d8e34e7-0ef3-4477-8b7e-7b7d4c3e5b91"]},"is_backing":{"type":"boolean","title":"Is Backing","description":"Indicates if the template should be used as a backing image","examples":[true]}},"additionalProperties":false,"type":"object","required":["name","storage_id","base_volume_id","is_backing"],"title":"RequestCreateTemplate","description":"Schema for creating a new template.\n\nInherits common fields from APITemplateBase and adds the field\nfor selecting a base volume from which to create the template.\n\nAttributes:\n    base_volume_id (UUID): ID of the base volume to use for the template.\n\nExample:\n    >>> RequestCreateTemplate(\n    ...     name='ubuntu-template',\n    ...     storage_id=UUID('...'),\n    ...     is_backing=True,\n    ...     base_volume_id=UUID('...'),\n    ... )"},"RequestEditTemplate":{"properties":{"name":{"anyOf":[{"type":"string","maxLength":40,"minLength":1},{"type":"null"}],"title":"Name","description":"New name for the template","examples":["ubuntu-template-renamed"]},"description":{"anyOf":[{"type":"string","maxLength":255},{"type":"null"}],"title":"Description","description":"New description for the template","examples":["Updated description for Ubuntu template"]}},"additionalProperties":false,"type":"object","title":"RequestEditTemplate","description":"Schema for updating a template.\n\nRequires at least one of the fields to be provided.\n\nAttributes:\n    name (Optional[str]): New name for the template.\n    description (Optional[str]): New description."},"ResticBackupResult":{"properties":{"snapshot_id":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Snapshot Id"},"total_files_processed":{"type":"integer","title":"Total Files Processed"},"files_new":{"type":"integer","title":"Files New"},"files_changed":{"type":"integer","title":"Files Changed"},"files_unmodified":{"type":"integer","title":"Files Unmodified"},"data_added_packed":{"type":"integer","title":"Data Added Packed"}},"type":"object","required":["total_files_processed","files_new","files_changed","files_unmodified","data_added_packed"],"title":"ResticBackupResult","description":"Schema for restic backup results.\n\nThis schema represents the results of a backup operation and includes\nmetadata about the files processed and data added during the backup.\n\nAttributes:\n    snapshot_id (Optional[str]): ID of the created snapshot, if available.\n    total_files_processed (int): Total number of files processed.\n    files_new (int): Number of new files backed up.\n    files_changed (int): Number of changed files backed up.\n    files_unmodified (int): Number of unmodified files.\n    data_added_packed (int): Total size of the packed data added, in bytes."},"ResticDeleteResult":{"properties":{"message":{"type":"string","title":"Message"}},"type":"object","required":["message"],"title":"ResticDeleteResult","description":"Schema for restic snapshot deletion results.\n\nThis schema represents the result of a snapshot deletion operation\nperformed using Restic.\n\nAttributes:\n    message (str): A message describing the outcome of the deletion\n        operation, including stdout and stderr details."},"ResticRestoreResult":{"properties":{"total_files":{"type":"integer","title":"Total Files"},"files_restored":{"type":"integer","title":"Files Restored"},"files_skipped":{"type":"integer","title":"Files Skipped"},"total_bytes":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Total Bytes"},"bytes_restored":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Bytes Restored"},"bytes_skipped":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Bytes Skipped"}},"type":"object","required":["total_files","files_restored","files_skipped"],"title":"ResticRestoreResult","description":"Schema for restic restore results.\n\nThis schema represents the results of a restore operation and includes\nmetadata about the files and data restored or skipped.\n\nAttributes:\n    total_files (int): Total number of files in the backup.\n    files_restored (int): Number of files successfully restored.\n    files_skipped (int): Number of files skipped during restore.\n    total_bytes (Optional[int]): Total size of the backup, in bytes.\n    bytes_restored (Optional[int]): Size of data successfully restored, in\n        bytes.\n    bytes_skipped (Optional[int]): Size of data skipped during restore, in\n        bytes."},"ResticSnapshot":{"properties":{"id":{"type":"string","title":"Id"},"short_id":{"type":"string","title":"Short Id"},"time":{"type":"string","title":"Time"},"paths":{"items":{},"type":"array","title":"Paths"},"hostname":{"type":"string","title":"Hostname"},"username":{"type":"string","title":"Username"}},"type":"object","required":["id","short_id","time","paths","hostname","username"],"title":"ResticSnapshot","description":"Schema for metadata of a restic snapshot.\n\nThis schema represents metadata about a snapshot stored in the backup\nrepository, including its ID, creation timestamp, and associated paths.\n\nAttributes:\n    id (str): Unique ID of the snapshot.\n    short_id (str): Shortened ID of the snapshot.\n    time (str): Timestamp of the snapshot creation in ISO 8601 format.\n    paths (List): List of file or directory paths included in the snapshot.\n    hostname (str): Hostname where the snapshot was created.\n    username (str): Username of the snapshot creator."},"Session":{"properties":{"ip":{"type":"string","title":"Ip"},"status":{"type":"string","title":"Status"},"id":{"type":"string","title":"Id"},"inf_type":{"type":"string","title":"Inf Type"},"port":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Port"}},"type":"object","required":["ip","status","id","inf_type"],"title":"Session","description":"Represents an session associated with block device.\n\nAttributes:\n    ip (str): REMOTE_SERVER_IP. The IP address of the block device target.\n    status (str): SOME_STATUS. The status of the block device session.\n    id (str): SESSION_ID. The ID of the block device session.\n    inf_type (str): SESSION_TYPE. The type of the block device interface.\n    port (str): REMOTE_SERVER_PORT. The port number of the block device\n        target."},"SnapshotInfo":{"properties":{"vm_id":{"type":"string","format":"uuid","title":"Vm Id"},"id":{"type":"string","format":"uuid","title":"Id"},"vm_name":{"type":"string","title":"Vm Name"},"name":{"type":"string","title":"Name"},"parent":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Parent"},"description":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Description"},"created_at":{"type":"string","title":"Created At"},"is_current":{"type":"boolean","title":"Is Current"},"status":{"type":"string","title":"Status"}},"type":"object","required":["vm_id","id","vm_name","name","created_at","is_current","status"],"title":"SnapshotInfo","description":"Schema for detailed snapshot information.\n\nAttributes:\n    vm_id (UUID): The ID of the virtual machine.\n    id (UUID): The ID of the snapshot.\n    vm_name (str): The name of the virtual machine.\n    name (str): The name of the snapshot.\n    parent (Optional[str]): The optional name of the parent snapshot.\n    description (Optional[str]): The optional description of the snapshot.\n    created_at (str): The creation time of the snapshot.\n    is_current (bool): The flag of the current snapshot.\n    status (str): The status of the snapshot."},"Storage":{"properties":{"id":{"type":"string","format":"uuid","title":"Id"},"name":{"type":"string","title":"Name"},"description":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Description"},"storage_type":{"type":"string","title":"Storage Type"},"status":{"type":"string","title":"Status"},"size":{"type":"integer","title":"Size"},"available":{"type":"integer","title":"Available"},"user_id":{"anyOf":[{"type":"string","format":"uuid"},{"type":"null"}],"title":"User Id"},"information":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Information"},"storage_extra_specs":{"anyOf":[{"$ref":"#/components/schemas/NfsStorageExtraSpecsInfo"},{"$ref":"#/components/schemas/LocalFSStorageExtraSpecsInfo"}],"title":"Storage Extra Specs"}},"type":"object","required":["id","name","storage_type","status","size","available","storage_extra_specs"],"title":"Storage","description":"Schema representing a storage entity.\n\nAttributes:\n    id (UUID): The unique identifier of the storage.\n    name (str): The name of the storage.\n    description (Optional[str]): A brief description of the storage.\n    storage_type (str): The type of storage (e.g., 'nfs', 'localfs').\n    status (str): The current status of the storage.\n    size (int): The total size of the storage in bytes.\n    available (int): The available size of the storage in bytes.\n    user_id (Optional[UUID]): The ID of the user who owns the storage.\n    information (Optional[str]): Additional information about the storage.\n    storage_extra_specs (Union[NfsStorageExtraSpecsInfo,\n        LocalFSStorageExtraSpecsInfo]): Additional specifications for the\n        storage."},"StoragesData":{"properties":{"size":{"type":"integer","title":"Size"},"used":{"type":"integer","title":"Used"},"free":{"type":"integer","title":"Free"},"percentage":{"type":"number","title":"Percentage"},"cls":{"type":"string","title":"Cls"}},"type":"object","required":["size","used","free","percentage","cls"],"title":"StoragesData","description":"Represents storage usage data.\n\nAttributes:\n    size (int): The total storage size.\n    used (int): The amount of used storage.\n    free (int): The amount of free storage.\n    percentage (float): The percentage of storage usage.\n    cls (str): The class of the storage."},"TemplateResponse":{"properties":{"id":{"type":"string","format":"uuid","title":"Id","description":"Unique identifier of the template","examples":["a73f920b-d282-41e4-8ec1-6e6b89d3a9e7"]},"name":{"type":"string","title":"Name","description":"Name of the template","examples":["ubuntu-template"]},"description":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Description","description":"Description of the template","examples":["Template for Ubuntu server deployments"]},"tmp_format":{"type":"string","title":"Tmp Format","description":"Disk format of the template (qcow2)","examples":["qcow2"]},"storage_id":{"type":"string","format":"uuid","title":"Storage Id","description":"ID of the storage where the template resides","examples":["c2f7b67e-92a3-41ea-b760-ef7785ebfcb9"]},"is_backing":{"type":"boolean","title":"Is Backing","description":"Whether this template is a backing image","examples":[true]},"created_at":{"type":"string","format":"date-time","title":"Created At","description":"Template creation timestamp","examples":["2024-05-28T10:45:21.000Z"]},"status":{"$ref":"#/components/schemas/TemplateStatus","description":"Current lifecycle status of the template","examples":["available"]}},"type":"object","required":["id","name","tmp_format","storage_id","is_backing","created_at","status"],"title":"TemplateResponse","description":"Schema representing a full template object for API responses.\n\nExtends:\n    APIConfigResponseModel\n\nAttributes:\n    id (UUID): Unique identifier of the template.\n    name (str): Name of the template.\n    description (Optional[str]): Description of the template.\n    storage_id (UUID): Linked storage ID.\n    is_backing (bool): Whether it's a backing image.\n    created_at (datetime): Timestamp of creation.\n    status (TemplateStatus): Current lifecycle status of the template."},"TemplateStatus":{"type":"string","enum":["new","creating","editing","available","error","deleting"],"title":"TemplateStatus","description":"Represents the lifecycle status of a template.\n\nValues:\n    - NEW: Template object created but not yet processed.\n    - CREATING: Template creation is in progress.\n    - AVAILABLE: Template is ready for use.\n    - ERROR: Template creation or validation failed.\n    - DELETING: Template is being deleted."},"Token":{"properties":{"access_token":{"type":"string","title":"Access Token"},"refresh_token":{"type":"string","title":"Refresh Token"},"token_type":{"type":"string","title":"Token Type","default":"bearer"}},"type":"object","required":["access_token","refresh_token"],"title":"Token","description":"Schema for authentication tokens.\n\nAttributes:\n    access_token (str): The access token for user authentication.\n    refresh_token (str): The refresh token used to obtain a new access\n        token.\n    token_type (str): The type of token, default is 'bearer'."},"User":{"properties":{"username":{"type":"string","title":"Username"},"email":{"anyOf":[{"type":"string","format":"email"},{"type":"null"}],"title":"Email"},"is_superuser":{"type":"boolean","title":"Is Superuser"},"id":{"type":"string","format":"uuid","title":"Id"}},"type":"object","required":["username","is_superuser","id"],"title":"User","description":"Schema for user information including user ID.\n\nAttributes:\n    id (UUID): The unique identifier for the user.\n\nConfig:\n    orm_mode (bool): Enable ORM mode for compatibility with ORMs."},"UserChangePassword":{"properties":{"new_password":{"type":"string","title":"New Password"}},"type":"object","required":["new_password"],"title":"UserChangePassword","description":"Schema for changing a user's password.\n\nAttributes:\n    new_password (str): The new password for the user."},"UserCreate":{"properties":{"username":{"type":"string","title":"Username"},"email":{"anyOf":[{"type":"string","format":"email"},{"type":"null"}],"title":"Email"},"is_superuser":{"type":"boolean","title":"Is Superuser"},"password":{"type":"string","title":"Password"}},"type":"object","required":["username","is_superuser","password"],"title":"UserCreate","description":"Schema for user creation including password.\n\nAttributes:\n    password (str): The password for the new user."},"UserDelete":{"properties":{"id":{"type":"string","format":"uuid","title":"Id"},"message":{"type":"string","title":"Message"}},"type":"object","required":["id","message"],"title":"UserDelete","description":"Schema for user deletion response.\n\nAttributes:\n    id (UUID): The unique identifier of the deleted user.\n    message (str): A message indicating the result of the deletion."},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"},"VirtualInterface":{"properties":{"mode":{"type":"string","enum":["bridge","nat","default","isolated","vepa","user","virtual_network"],"title":"Mode","default":"bridge"},"portgroup":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Portgroup"},"interface":{"type":"string","title":"Interface"},"mac":{"type":"string","title":"Mac","default":"6C:4A:74:B4:FD:59"},"model":{"type":"string","enum":["virtio","bridge"],"title":"Model","default":"virtio"},"order":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Order"}},"type":"object","required":["interface"],"title":"VirtualInterface","description":"Schema for virtual network interface information."},"VirtualInterfaceInfo":{"properties":{"mode":{"type":"string","enum":["bridge","nat","default","isolated","vepa","user","virtual_network"],"title":"Mode","default":"bridge"},"portgroup":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Portgroup"},"interface":{"type":"string","title":"Interface"},"mac":{"type":"string","title":"Mac","default":"6C:4A:74:B4:FD:59"},"model":{"type":"string","enum":["virtio","bridge"],"title":"Model","default":"virtio"},"order":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Order"},"id":{"type":"integer","title":"Id"}},"type":"object","required":["interface","id"],"title":"VirtualInterfaceInfo","description":"Schema for detailed virtual network interface information."},"VirtualMachineInfo":{"properties":{"id":{"type":"string","title":"Id"},"name":{"type":"string","title":"Name"},"power_state":{"type":"string","title":"Power State"},"status":{"type":"string","title":"Status"},"description":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Description"},"information":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Information"},"cpu":{"$ref":"#/components/schemas/Cpu"},"ram":{"$ref":"#/components/schemas/RAM"},"os":{"$ref":"#/components/schemas/Os"},"graphic_interface":{"$ref":"#/components/schemas/GraphicInterfaceInfo"},"disks":{"items":{"anyOf":[{"$ref":"#/components/schemas/intakevms__modules__virtual_machines__entrypoints__schemas__DiskInfo"},{"type":"null"}]},"type":"array","title":"Disks"},"virtual_interfaces":{"items":{"$ref":"#/components/schemas/VirtualInterfaceInfo"},"type":"array","title":"Virtual Interfaces"}},"type":"object","required":["id","name","power_state","status","cpu","ram","os","graphic_interface","disks","virtual_interfaces"],"title":"VirtualMachineInfo","description":"Schema for detailed virtual machine information."},"VirtualNetwork":{"properties":{"network_name":{"type":"string","title":"Network Name","default":"my_virtual_network"},"forward_mode":{"type":"string","title":"Forward Mode","default":"bridge"},"bridge":{"type":"string","title":"Bridge","default":"my_bridge"},"virtual_port_type":{"type":"string","title":"Virtual Port Type","default":"openvswitch"},"port_groups":{"items":{"$ref":"#/components/schemas/PortGroup"},"type":"array","title":"Port Groups"}},"type":"object","required":["port_groups"],"title":"VirtualNetwork","description":"Represents a virtual network configuration.\n\nAttributes:\n    network_name (str): The name of the virtual network.\n    forward_mode (str): The forwarding mode of the virtual network.\n    bridge (str): The bridge associated with the virtual network.\n    virtual_port_type (str): The type of virtual port used by the virtual\n        network.\n    port_groups (List[PortGroup]): List of port groups associated with the\n        virtual network."},"VirtualNetworkResponse":{"properties":{"network_name":{"type":"string","title":"Network Name","default":"my_virtual_network"},"forward_mode":{"type":"string","title":"Forward Mode","default":"bridge"},"bridge":{"type":"string","title":"Bridge","default":"my_bridge"},"virtual_port_type":{"type":"string","title":"Virtual Port Type","default":"openvswitch"},"port_groups":{"items":{"$ref":"#/components/schemas/PortGroup"},"type":"array","title":"Port Groups"},"id":{"type":"string","format":"uuid4","title":"Id"},"state":{"type":"string","title":"State"},"autostart":{"type":"string","title":"Autostart"},"persistent":{"type":"string","title":"Persistent"},"virsh_xml":{"type":"string","title":"Virsh Xml"}},"type":"object","required":["port_groups","id","state","autostart","persistent","virsh_xml"],"title":"VirtualNetworkResponse","description":"Represents a response containing information about a virtual network.\n\nAttributes:\n    id (UUID4): The ID of the virtual network.\n    state (str): The state of the virtual network.\n    autostart (str): Indicates if the virtual network should start\n        automatically.\n    persistent (str): Indicates if the virtual network configuration is\n        persistent.\n    virsh_xml (str): The virsh XML configuration of the virtual network."},"Vnc":{"properties":{"url":{"type":"string","title":"Url","default":""}},"type":"object","title":"Vnc","description":"Schema for VNC session details."},"Volume":{"properties":{"id":{"type":"string","format":"uuid","title":"Id"},"name":{"type":"string","title":"Name"},"description":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Description"},"storage_id":{"anyOf":[{"type":"string","format":"uuid"},{"type":"null"}],"title":"Storage Id"},"user_id":{"anyOf":[{"type":"string","format":"uuid"},{"type":"null"}],"title":"User Id"},"format":{"type":"string","title":"Format"},"size":{"type":"integer","title":"Size"},"used":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Used"},"status":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Status"},"information":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Information"},"attachments":{"items":{"anyOf":[{"$ref":"#/components/schemas/intakevms__modules__volume__entrypoints__schemas__Attachment"},{"type":"null"}]},"type":"array","title":"Attachments"},"read_only":{"anyOf":[{"type":"boolean"},{"type":"null"}],"title":"Read Only","default":false},"template_id":{"anyOf":[{"type":"string","format":"uuid"},{"type":"null"}],"title":"Template Id"}},"type":"object","required":["id","name","format","size","attachments","template_id"],"title":"Volume","description":"Schema representing a volume.\n\nAttributes:\n    id (UUID): The ID of the volume.\n    name (str): The name of the volume.\n    description (Optional[str]): A description of the volume.\n    storage_id (Optional[UUID]): The ID of the storage the volume belongs\n        to.\n    user_id (Optional[UUID]): The ID of the user who owns the volume.\n    format (str): The format of the volume (e.g., qcow2, raw).\n    size (int): The size of the volume in bytes.\n    used (Optional[int]): The amount of space used in the volume.\n    status (Optional[str]): The status of the volume.\n    information (Optional[str]): Additional information about the volume.\n    attachments (List[Optional[Attachment]]): A list of attachments for the\n        volume.\n    read_only (Optional[bool]): Whether the volume is read-only."},"intakevms__modules__block_device__entrypoints__schemas__Interface":{"properties":{"inf_type":{"type":"string","title":"Inf Type"},"ip":{"type":"string","title":"Ip"},"port":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Port"}},"type":"object","required":["inf_type","ip"],"title":"Interface","description":"Represents general information about a block device interface.\n\nAttributes:\n    inf_type (str): The type of the block device interface.\n    ip (str): The IP address of the block device interface.\n    port (Optional[str]): The port number of the block device interface."},"intakevms__modules__dashboard__entrypoints__schemas__DiskInfo":{"properties":{"read":{"type":"number","title":"Read"},"write":{"type":"number","title":"Write"},"date":{"type":"integer","title":"Date"}},"type":"object","required":["read","write","date"],"title":"DiskInfo","description":"Represents disk read/write data.\n\nAttributes:\n    read (float): The amount of data read from the disk.\n    write (float): The amount of data written to the disk.\n    date (int): The timestamp of the disk data."},"intakevms__modules__image__entrypoints__schemas__AttachImage":{"properties":{"vm_id":{"type":"string","format":"uuid","title":"Vm Id"},"target":{"anyOf":[{"type":"string","minLength":1,"format":"path"},{"type":"null"}],"title":"Target"}},"type":"object","required":["vm_id"],"title":"AttachImage","description":"Represents the data required to attach an image to a virtual machine.\n\nThis schema validates the data provided for attaching an image to a VM,\nincluding the VM ID and an optional target path.\n\nAttributes:\n    vm_id (UUID): The ID of the virtual machine to which the image will be\n        attached.\n    target (Optional[str]): The optional target path for the attachment.\n\nMethods:\n    _normalize_id: Validates and normalizes the VM ID.\n    path_validator: Validates the target path, ensuring it meets required\n    conditions (e.g., length, special character validation)."},"intakevms__modules__image__entrypoints__schemas__Attachment":{"properties":{"id":{"type":"integer","title":"Id"},"vm_id":{"type":"string","format":"uuid","title":"Vm Id"},"target":{"anyOf":[{"type":"string","format":"path"},{"type":"null"}],"title":"Target"}},"type":"object","required":["id","vm_id"],"title":"Attachment","description":"Represents an attachment of an image to a virtual machine.\n\nThis schema defines the structure for an image attachment, including\nthe ID of the attachment, the VM it is attached to, and the target\npath, if applicable.\n\nAttributes:\n    id (int): The ID of the attachment.\n    vm_id (UUID): The ID of the virtual machine to which the image is\n        attached.\n    target (Optional[str]): The target path for the attachment."},"intakevms__modules__network__entrypoints__schemas__Interface":{"properties":{"id":{"type":"string","title":"Id"},"name":{"type":"string","title":"Name"},"mac":{"type":"string","title":"Mac"},"ip":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Ip"},"netmask":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Netmask"},"inf_type":{"type":"string","title":"Inf Type"},"power_state":{"type":"string","title":"Power State"},"status":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Status"},"mtu":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Mtu"},"speed":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Speed"},"interface_extra_specs":{"anyOf":[{"$ref":"#/components/schemas/InterfaceExtraSpecs"},{"type":"null"}]}},"type":"object","required":["id","name","mac","inf_type","power_state"],"title":"Interface","description":"Schema representing a network interface.\n\nAttributes:\n    id (str): The unique identifier of the interface.\n    name (str): The name of the interface.\n    mac (str): The MAC address of the interface.\n    ip (Optional[str]): The IP address of the interface.\n    netmask (Optional[int]): The netmask of the interface.\n    inf_type (str): The type of the interface (e.g., physical, virtual).\n    power_state (str): The power state of the interface (e.g., on, off).\n    status (Optional[str]): The status of the interface.\n    mtu (Optional[int]): The Maximum Transmission Unit size.\n    speed (Optional[int]): The speed of the interface.\n    interface_extra_specs (Optional[InterfaceExtraSpecs]): Additional\n        specifications for the interface."},"intakevms__modules__virtual_machines__entrypoints__schemas__AttachImage":{"properties":{"name":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Name"},"emulation":{"type":"string","enum":["virtio","ide","scsi","sata"],"title":"Emulation","default":"virtio"},"format":{"type":"string","enum":["qcow2","raw"],"title":"Format","default":"qcow2"},"qos":{"$ref":"#/components/schemas/QOS"},"boot_order":{"type":"integer","title":"Boot Order"},"order":{"type":"integer","title":"Order"},"read_only":{"type":"boolean","title":"Read Only","default":false},"image_id":{"type":"string","title":"Image Id"}},"type":"object","required":["qos","boot_order","order","image_id"],"title":"AttachImage","description":"Schema for attaching an image as a disk."},"intakevms__modules__virtual_machines__entrypoints__schemas__AttachVolume":{"properties":{"name":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Name"},"emulation":{"type":"string","enum":["virtio","ide","scsi","sata"],"title":"Emulation","default":"virtio"},"format":{"type":"string","enum":["qcow2","raw"],"title":"Format","default":"qcow2"},"qos":{"$ref":"#/components/schemas/QOS"},"boot_order":{"type":"integer","title":"Boot Order"},"order":{"type":"integer","title":"Order"},"read_only":{"type":"boolean","title":"Read Only","default":false},"volume_id":{"type":"string","title":"Volume Id"}},"type":"object","required":["qos","boot_order","order","volume_id"],"title":"AttachVolume","description":"Schema for attaching an existing volume as a disk."},"intakevms__modules__virtual_machines__entrypoints__schemas__DiskInfo":{"properties":{"id":{"type":"integer","title":"Id"},"name":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Name"},"emulation":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Emulation"},"format":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Format"},"qos":{"anyOf":[{"$ref":"#/components/schemas/QOS"},{"type":"null"}]},"boot_order":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Boot Order"},"order":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Order"},"path":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Path"},"size":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Size"},"provisioning":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Provisioning"},"disk_id":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Disk Id"},"type":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Type"},"read_only":{"type":"boolean","title":"Read Only","default":false}},"type":"object","required":["id"],"title":"DiskInfo","description":"Schema for detailed disk information."},"intakevms__modules__volume__entrypoints__schemas__AttachVolume":{"properties":{"vm_id":{"type":"string","format":"uuid","title":"Vm Id"},"target":{"anyOf":[{"type":"string","minLength":1,"format":"path"},{"type":"null"}],"title":"Target"}},"type":"object","required":["vm_id"],"title":"AttachVolume","description":"Schema for attaching a volume to a virtual machine.\n\nAttributes:\n    vm_id (UUID): The ID of the virtual machine.\n    target (Optional[str]): The target device path for the attachment."},"intakevms__modules__volume__entrypoints__schemas__Attachment":{"properties":{"id":{"type":"integer","title":"Id"},"vm_id":{"type":"string","format":"uuid","title":"Vm Id"},"target":{"anyOf":[{"type":"string","format":"path"},{"type":"null"}],"title":"Target"}},"type":"object","required":["id","vm_id"],"title":"Attachment","description":"Schema representing a volume attachment.\n\nAttributes:\n    id (int): The ID of the attachment.\n    vm_id (UUID): The ID of the virtual machine the volume is attached to.\n    target (Optional[str]): The target device path for the attachment."}},"securitySchemes":{"OAuth2PasswordBearer":{"type":"oauth2","flows":{"password":{"scopes":{},"tokenUrl":"/auth/"}}},"HTTPBearer":{"type":"http","scheme":"bearer"}}}}